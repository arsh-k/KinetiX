#include <math.h>
__KINETIX_DEVICE__ __KINETIX_INLINE__ void kinetix_species_rates(const cfloat lnT, const cfloat T, const cfloat T2, const cfloat T3, const cfloat T4, const cfloat rcpT, const cfloat* Ci, cfloat* wdot) 
{
  // Regrouping of rate constants to eliminate redundant operations
  const cfloat A[354] = {-3.2519156789464008e+00, 2.2648832258100340e+00, 6.9275579062783166e+00, 9.7981270368783022e+00, 6.4002574453088208e+00, 1.7479072204093921e+01, -9.4674993935886376e-01, -2.0402208285265546e+00, 3.1459662512417644e+01, 4.4975849753081540e+00, 1.4375126345899696e+01, 1.4731801289838430e+01, 1.8420680743952367e+01, 1.4845129975145433e+01, 1.6236767180675820e+01, 1.3458835614025542e+01, 2.4000410569938587e+01, 1.1407564949312402e+01, 1.7909855120186375e+01, 1.5194276652663373e+01, 1.7617718697385214e+01, 1.8246327356807587e+01, 2.4932054526026954e+00, 1.6118095650958320e+01, 3.2275412015069918e+01, 2.3355154677083057e+01, 4.9317461270647968e+01, 6.4922398350204711e+00, 1.3901688254205327e+01, 2.8535239266568436e+01, 1.3199324418540456e+01, 4.6290718760351410e+01, 1.3199324418540456e+01, 4.2234989034257090e+01, 4.0500443033255209e+00, 1.3869051324892304e+01, 4.5221588824247810e+01, 1.2013700752882718e+01, 1.7305939073354374e+01, 1.4703401815316731e+01, 6.8313983144964880e+01, 3.7256934272366524e+00, 1.4220975666072439e+01, 1.9383855061725370e+01, 4.9676042792857281e+01, 1.5538277155705378e+01, 6.5807383670565613e+01, 1.5620515253942349e+01, 4.1783003910514033e+01, 1.3199324418540456e+01, 6.8566727166055387e+01, 2.8141245943818549e-01, 2.6979015878699776e+01, 6.7463102335563732e+01, 4.7449321283632502e+00, 1.6240313283682568e+01, 3.7612001156935624e+00, 3.6162117212513778e+01, 5.3752784076841653e+00, 1.8119575651168443e+01, 1.4648419680899378e+01, -3.3326045901965440e+00, 1.6489659207390805e+01, 1.4508657738524219e+01, 2.8161649366990719e+01, 2.4248027257182949e+00, 2.8657062711761821e+01, 5.6648336592976989e+01, 4.0253516907351496e+00, 2.7190964563050766e+01, 4.6051701859880918e+00, 3.8628327612373741e+00, 8.1403155401599854e+00, 3.6464311358790924e-01, 1.8405496333974869e+00, -2.2246526053139458e+01, -6.8517901091076838e-01, 3.5174978373583161e+00, -2.1451004462275975e+01, 1.2809338454620642e+00, 1.2641267271456831e+00, 1.5830413578506539e+01, 1.1775289729437720e+01, 1.9855765269241687e+01, 1.8826145852060531e+01, 1.7227665977411035e+00, 1.7875953568510692e+01, 1.8497641785088494e+01, 3.7830902681518481e+01, 1.9062534630124759e+01, 1.8365168034022108e+01, -6.9314718055994529e-01, 2.1193269466192145e+01, 9.0016134994427144e-01, 1.3604789526648622e+01, 4.9343828146488704e+01, 2.6901209950997011e+01, 6.0498484194687045e+01, 1.7504390012078211e+01, 1.7387856195822259e+01, 1.4652758082497977e+01, -3.7090821614314557e+00, 2.4938352016864641e+01, 6.7998743128449433e+01, 1.5738298289598733e+01, -5.7077904960537396e+00, -1.4828052615007346e+00, 1.8148247421590511e+00, 1.6705882315860439e+01, -4.2295163757293160e+01, 1.0947291604709243e+01, 2.4547549928066552e+01, 2.9710462657608385e+01, 1.0407375403177093e+02, 1.3641157170819497e+01, 1.4978661367769956e+01, 1.7111347423968603e+01, 9.1049798563183568e+00, 1.7330036624933431e+01, 1.4151982794585487e+01, 1.7182806387950748e+01, 1.9773935250994057e+01, 1.4508657738524219e+01, 2.5093978711720020e+01, 2.0272280213536437e+01, 1.4562198505452249e+01, 1.8478949652076341e+01, 1.5176487111099874e+01, 1.8698312480550644e+01, 1.7281246460764002e+01, 7.6009024595420822e+00, -7.7435723598548856e-01, 2.4686007793152581e-01, 1.6811242831518264e+01, 1.6888203872654394e+01, 1.9715407911546766e+01, 1.7504390012078211e+01, 4.4998096703302650e+00, 1.8683045008419857e+01, 1.7617718697385214e+01, 1.3710150042306449e+01, 2.5649493574615367e+00, 1.6118095650958320e+01, 1.5894952099644110e+01, 1.5630335300123326e+01, -1.2207799226423173e+00, 1.4508657738524219e+01, 1.9552082855443466e+01, 2.5970289909106896e+01, 2.8966022182660890e+01, 5.2998677852016336e+01, 8.2712926529794117e+00, 9.5310179804324741e-02, -5.4261507380579221e+00, -8.7403367427304470e+00, 3.2572663538537853e+01, 1.7958645284355807e+01, 8.0455882808035284e+00, 1.4946912669455374e+01, 3.0195970473390084e+01, 1.6118095650958320e+01, 1.1512925464970229e+01, 1.8379858749432110e+01, 1.3815510557964274e+01, 4.5849674786705723e+00, 5.0106352940962555e+00, 7.8845736036427005e-01, 3.1135153092103742e+00, -2.2537949288246137e+00, 2.3191365368418030e+01, 2.1465203181675790e+01, 1.2506177237980511e+01, 1.8951308995014536e+01, 2.9957322735539909e+00, 2.0228969515131631e+01, 1.5123843377614453e+01, -6.1618613942381717e-01, 3.9120230054281460e+00, 2.2407096892759584e+00, 1.6118095650958320e+01, 2.2541342614491839e+01, 1.4994165554305921e+01, 1.4914122846632385e+01, 2.2332703749380510e+01, 8.9871968206619730e+00, 1.4493544100714171e+01, 3.1506380136985104e+01, 1.9113827924512311e+01, 1.1130199843831553e+01, 1.2621488084491506e+01, 2.9042829811980608e-01, 1.7220035729719104e+01, 1.0061772531501841e+01, 1.4917450636725059e+01, 1.0006318803079060e+00, 1.3094992180608196e+01, 6.9089481360686648e+01, 1.4375722440052243e+02, -1.6450650900772514e+00, 2.7763173659827939e-01, 3.4531571205928664e+00, -7.8806163623446865e+00, -1.3917543283529426e+01, 9.3609335917033476e-01, 1.1853045203136443e+02, 1.1431280925279785e+02, 1.4011829736136412e+00, 1.0146433731146518e+01, 1.6774060040390548e+01, 2.6026896854443837e+00, 1.6850463544671545e+01, 2.8332133440562162e+00, 1.6118095650958320e+01, 1.6523560759066484e+01, 1.6300417207752275e+01, 3.4011973816621555e+00, 2.8036486224036711e+01, 1.5557729581632193e+01, -3.8971343929343956e+00, 1.6414489664012123e+01, 2.6459838134425603e+01, 1.9485391480944795e+01, 1.7453096717690659e+01, 3.4965075614664802e+00, 2.5257286443082556e+00, 1.5424948470398375e+01, 1.4887094174244465e+01, 7.6255950721324535e+00, 2.0000000000000000e+07, 5.7000000000000000e+07, 8.0000000000000000e+07, 1.5000000000000000e+07, 1.5000000000000000e+07, 5.0600000000000000e+07, 3.0000000000000000e+07, 3.0000000000000000e+07, 1.0000000000000000e+07, 1.0000000000000000e+07, 5.0000000000000000e+07, 3.0000000000000000e+07, 2.2400000000000000e+07, 1.0000000000000000e+08, 1.6500000000000000e+08, 6.0000000000000000e+08, 3.0000000000000000e+07, 7.3400000000000000e+07, 2.0000000000000000e+07, 2.0000000000000000e+07, 3.0000000000000000e+07, 2.0000000000000000e+06, 1.0000000000000000e+08, 1.0000000000000000e+07, 5.0000000000000000e+07, 3.0000000000000000e+07, 2.0000000000000000e+07, 3.0000000000000000e+07, 5.0000000000000000e+07, 5.0000000000000000e+06, 5.0000000000000000e+06, 2.0000000000000000e+07, 5.0000000000000000e+06, 2.0000000000000000e+07, 1.0000000000000000e+06, 3.7800000000000000e+07, 5.0000000000000000e+07, 5.0000000000000000e+07, 6.7100000000000000e+07, 4.0000000000000000e+07, 3.0000000000000000e+07, 6.0000000000000000e+07, 5.0000000000000000e+07, 5.0000000000000000e+07, 4.0000000000000000e+07, 3.0000000000000000e+07, 2.8000000000000000e+07, 1.2000000000000000e+07, 7.0000000000000000e+07, 3.0000000000000000e+07, 9.0000000000000000e+06, 7.0000000000000000e+06, 1.4000000000000000e+07, 2.6480000000000000e+07, 1.0000000000000000e+07, 4.0000000000000000e+07, 2.0000000000000000e+07, 1.5000000000000000e+07, 3.0000000000000000e+06, 3.9000000000000000e+07, 3.3000000000000000e+08, 5.0000000000000000e+06, 2.5000000000000000e+07, 7.0000000000000000e+07, 5.0000000000000000e+07, 2.0000000000000000e+07, 2.5000000000000000e+07, 2.5000000000000000e+07, 7.7000000000000000e+07, 4.0000000000000000e+07, 2.3500000000000000e+07, 5.4000000000000000e+07, 2.5000000000000000e+06, 2.0000000000000000e+07, 3.3000000000000000e+07, 1.9000000000000000e+07, 2.9000000000000000e+07, 4.1000000000000000e+07, 1.6200000000000000e+07, 2.4600000000000000e+07, 2.2000000000000000e+07, 2.0000000000000000e+06, 1.2000000000000000e+07, 1.2000000000000000e+07, 1.0000000000000000e+08, 9.0000000000000000e+06, 3.3700000000000000e+07, 1.0960000000000000e+08, 1.5000000000000000e+08, 1.8100000000000000e+04, 2.3500000000000000e+04, 2.2000000000000000e+07, 1.1000000000000000e+07, 1.2000000000000000e+07, 3.0100000000000000e+07, 9.4300000000000000e+06, 9.6400000000000000e+07, 3.6130000000000000e+07, 2.4100000000000000e+07, 2.4100000000000000e+07, 5.5000000000000000e+08, 2.2000000000000000e+10, 1.2000000000000000e+05, 5.0000000000000000e+05, 1.0000000000000000e+06, 1.0000000000000000e+11, 5.1407407407407402e-01, 1.2500000000000020e+00, 2.4705882352941178e-01, 4.9999999999999973e+00, 5.9999999999999998e-01, 1.3333333333333321e+00, 3.3333333333333331e-01, 1.2466666666666687e-01, 1.7513134851138348e+00, 2.4975369458128083e-01, 4.4609665427509251e+00, 1.0000000000000004e+00, 9.9999999999999878e-01, 1.0000000000000007e+00, 9.9999999999999992e-02, 5.3599999999999992e-01, 1.1599999999999993e+00, 9.9999999999999922e-01, 1.0000000000000004e+00, 4.7999999999999970e-01};

  const cfloat beta[228] = {2.7000000000000002e+00, 2.0000000000000000e+00, 1.5000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 2.5000000000000000e+00, 2.5000000000000000e+00, -1.4099999999999999e+00, 1.9199999999999999e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, -8.5999999999999999e-01, -7.6000000000000001e-01, -8.0000000000000004e-01, -6.7069999999999996e-01, -5.9999999999999998e-01, -1.2500000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 2.0000000000000000e+00, 0.0000000000000000e+00, -2.7599999999999998e+00, -5.3400000000000003e-01, -4.7599999999999998e+00, 1.6200000000000001e+00, 4.7999999999999998e-01, -2.5699999999999998e+00, 4.5400000000000001e-01, -4.8200000000000003e+00, 4.5400000000000001e-01, -4.7999999999999998e+00, 1.8999999999999999e+00, 5.0000000000000000e-01, -4.6500000000000004e+00, 6.5000000000000002e-01, -8.9999999999999997e-02, 5.1500000000000001e-01, -7.4400000000000004e+00, 1.6299999999999999e+00, 5.0000000000000000e-01, -2.3000000000000001e-01, -4.7999999999999998e+00, 0.0000000000000000e+00, -7.2699999999999996e+00, 2.7000000000000002e-01, -3.8599999999999999e+00, 4.5400000000000001e-01, -7.6200000000000001e+00, 2.5299999999999998e+00, -9.8999999999999999e-01, -7.0800000000000001e+00, 1.8999999999999999e+00, 0.0000000000000000e+00, 1.5000000000000000e+00, -3.4199999999999999e+00, 1.5100000000000000e+00, -3.7000000000000000e-01, -9.0000000000000002e-01, 2.3999999999999999e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 2.0000000000000000e+00, -1.4299999999999999e+00, -5.9199999999999999e+00, 1.6000000000000001e+00, -1.3400000000000001e+00, 1.6000000000000001e+00, 1.2280000000000000e+00, 1.1799999999999999e+00, 2.0000000000000000e+00, 2.0000000000000000e+00, 4.5000000000000000e+00, 2.2999999999999998e+00, 2.0000000000000000e+00, 4.0000000000000000e+00, 2.0000000000000000e+00, 2.1200000000000001e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 2.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, -3.7400000000000002e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 2.0000000000000000e+00, 0.0000000000000000e+00, 2.0000000000000000e+00, 5.0000000000000000e-01, -5.1100000000000003e+00, -1.1599999999999999e+00, -6.3600000000000003e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 2.4700000000000002e+00, -1.1799999999999999e+00, -7.0300000000000002e+00, 1.0000000000000001e-01, 2.8100000000000001e+00, 2.0000000000000000e+00, 1.7400000000000000e+00, 0.0000000000000000e+00, 7.5999999999999996e+00, 9.0000000000000002e-01, -1.3899999999999999e+00, 4.4000000000000000e-01, -9.3000000000000007e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 1.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, -1.4099999999999999e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 1.2000000000000000e+00, 2.0000000000000000e+00, 1.5000000000000000e+00, 0.0000000000000000e+00, -2.3000000000000001e-01, -4.5000000000000001e-01, 0.0000000000000000e+00, 1.5000000000000000e+00, -1.1000000000000000e-01, -1.3200000000000001e+00, 7.1999999999999997e-01, 1.8999999999999999e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 2.4500000000000002e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, -1.5200000000000000e+00, -2.0000000000000000e+00, -3.2999999999999998e+00, 1.5800000000000001e+00, 2.0299999999999998e+00, 2.2599999999999998e+00, 2.5600000000000001e+00, -3.3999999999999999e+00, 0.0000000000000000e+00, 8.8000000000000000e-01, 1.4999999999999999e-01, -3.1600000000000001e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 1.4099999999999999e+00, 1.5700000000000001e+00, 2.1099999999999999e+00, 1.7000000000000000e+00, 2.5000000000000000e+00, 0.0000000000000000e+00, -6.8999999999999995e-01, 1.7999999999999999e-01, -7.5000000000000000e-01, 2.0000000000000000e+00, -3.1000000000000000e-01, 1.4999999999999999e-01, 2.3999999999999999e+00, 1.6000000000000001e+00, 1.9399999999999999e+00, 0.0000000000000000e+00, -7.5200000000000000e-01, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 5.0000000000000000e-01, 4.2999999999999999e-01, -2.7999999999999998e+00, 0.0000000000000000e+00, 2.5000000000000000e-01, 2.8999999999999998e-01, 1.6100000000000001e+00, 0.0000000000000000e+00, 7.2999999999999998e-01, 0.0000000000000000e+00, 1.7700000000000000e+00, 4.2199999999999999e-01, -7.6299999999999999e+00, -1.6820000000000000e+01, 2.6800000000000002e+00, 2.5400000000000000e+00, 1.8000000000000000e+00, 2.7200000000000002e+00, 3.6499999999999999e+00, 1.6000000000000001e+00, -1.4600000000000000e+01, -1.3545000000000000e+01, 2.1899999999999999e+00, 2.5500000000000000e-01, -3.2000000000000001e-01, 2.0000000000000000e+00, -1.2400000000000000e+00, 2.1000000000000001e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 1.5000000000000000e+00, -1.0000000000000000e+00, 0.0000000000000000e+00, 2.6400000000000001e+00, 0.0000000000000000e+00, -1.3799999999999999e+00, -6.8999999999999995e-01, -3.5999999999999999e-01, 1.5000000000000000e+00, 1.8300000000000001e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 1.1599999999999999e+00};

  const cfloat E_R[228] = {3.1501542797022739e+03, 2.0128781339950631e+03, 4.3276879880893857e+03, 1.2001785873945564e+03, 1.5096586004962974e+03, 1.7813971485856309e+03, 1.5599805538461740e+03, 2.5160976674938288e+03, 1.4568205494789270e+04, 2.8633191456079771e+03, 6.7934637022333391e+02, 2.4053893701241006e+04, 2.0128781339950630e+04, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 8.5753640703524688e+03, 0.0000000000000000e+00, 0.0000000000000000e+00, 3.3766030697767184e+02, 5.3743846177668195e+02, 3.1954440377171630e+02, 2.6167415741935820e+03, 1.8115903205955569e+03, 8.0515125359802528e+02, 2.6972566995533850e+02, 1.2278556617369886e+03, 5.4548997431266216e+03, -1.3083707870967913e+02, 2.1386830173697547e+02, 1.8115903205955569e+03, 3.2860235537469407e+03, 1.3083707870967910e+03, 2.7979006062531380e+03, 1.3798279608536159e+03, 4.3276879880893858e+01, 2.5563552301737304e+03, -1.4291434751364949e+02, 3.0696391543424716e+02, 2.5160976674938290e+01, 7.0853310316626221e+03, 9.6819438245162542e+02, -5.5354148684864235e+01, 5.3844490084367942e+02, 9.5611711364765506e+02, 1.2077268803970380e+03, 3.6332450318610890e+03, 1.4090146937965443e+02, 1.6706888512159026e+03, 9.1585955096775376e+02, 3.5074401484863974e+03, 6.1594070900248935e+03, 7.9508686292804998e+02, 3.3640225814392493e+03, 3.7892430872457066e+03, 1.7250365608337693e+03, 4.0056274866501757e+04, 4.2446567650620898e+04, 1.7260429999007667e+03, 0.0000000000000000e+00, -8.5547320694790187e+02, -1.0617932156823958e+03, -2.5160976674938289e+02, 2.1487474080397300e+02, 1.4799686480198701e+04, 1.5096586004962974e+03, 6.6928197955335850e+02, 1.5801093351861246e+03, 2.7274498715633108e+03, 7.1306207896775118e+02, 1.5700449445161491e+03, 3.5225367344913607e+01, -2.2493913147394832e+02, -4.2270440813896323e+02, 7.5482930024814868e+02, -5.0321953349876577e+02, 6.7934637022333382e+03, 7.0450734689827214e+03, -1.0064390669975315e+03, 1.2580488337469144e+03, 4.3780099414392623e+02, 1.0064390669975315e+03, -8.2024783960298828e+02, 6.0386344019851895e+03, 1.1875980990570873e+04, 6.0386344019851895e+03, 2.8985445129528910e+02, 1.5650127491811616e+03, 9.7423301685361059e+02, 7.9468428730125097e+03, -2.5915805975186441e+02, 3.6382772271960766e+03, 6.0104541081092593e+03, 4.1616255420347934e+03, 2.2695200960794336e+03, 3.5703425901737432e+03, 5.7618636585608681e+02, 2.5362264488337796e+03, -2.7677074342432121e+02, 1.5338131381042382e+04, 1.0222904823027427e+04, 2.6066771835236073e+03, 3.2910557490819286e+02, 1.3898923515235911e+03, 5.3341270550869176e+03, 2.9488664663027675e+03, 4.6296197081886457e+03, 5.2586441250621028e+03, 4.5289758014888923e+02, -1.7763649532506433e+03, 1.0029165302630402e+03, 5.1076782650124733e+02, 4.3664358921687905e+04, 4.9214870376179293e+04, 1.9499756923077175e+03, 4.2974948160794600e+02, 1.7864293439206187e+02, 3.2709269677419775e+03, 1.9373952039702485e+02, 5.4398031571216579e+03, 1.1649532200496429e+04, 9.5007847924566977e+03, 1.0597803375484009e+04, 2.8190358266600862e+04, 2.8502354377370095e+04, -2.4154537607940759e+02, 0.0000000000000000e+00, -1.2077268803970379e+02, 1.8115903205955567e+02, 1.6606244605459273e+02, 0.0000000000000000e+00, 3.2709269677419775e+03, 5.0321953349876580e+01, 6.9695905389579066e+03, 0.0000000000000000e+00, 0.0000000000000000e+00, 1.8367512972704951e+03, -2.3148098540943226e+02, 2.5060332768238536e+03, 3.7238245478908669e+02, 3.3212489210918545e+02, -4.7805855682382753e+02, 6.5418539354839550e+03, 3.7540177199007926e+03, -2.2141659473945694e+02, 1.1272117550372354e+03, 1.0064390669975315e+04, 2.7199015785608291e+04, 3.7238245478908669e+02, 4.0257562679901264e+02, 6.3707592940943752e+04, 1.3385639591067171e+04, 6.7280451628784986e+03, 3.2206050143921011e+03, 4.5289758014888921e+03, 9.5611711364765506e+02, 2.3158162931613202e+04, 1.0129809209330155e+04, 0.0000000000000000e+00, 3.7238245478908669e+02, 3.7238245478908670e+04, 3.2709269677419776e+04, 1.4492722564764455e+04, 1.0945024853598155e+04, 4.2773660347395089e+03, 2.2141659473945696e+04, 5.7367026818859295e+03, 1.9122342272953101e+03, 6.6928197955335854e+03, 4.2632758878015440e+04, 1.4341756704714824e+03, 1.0668254110173834e+03, 1.4543044518114332e+03, 1.0064390669975315e+03, 1.4593366471464211e+02, -4.5289758014888918e+01, 4.9894216746402626e+03, 4.8057465449132138e+02, 3.2507981864020271e+03, 7.2212003057072889e+03, 1.7361073905707420e+02, -3.5476977111662990e+02, 5.6863807285360535e+03, 8.7207945155336110e+03, -8.8315028129033396e+02, -1.8619122739454335e+02, 2.9689952476427180e+02, 5.5298794536179375e+03, -4.7051026382134603e+02, 5.5354148684864235e+00, -1.9323630086352605e+02, 1.9701044736476681e+04, -5.6008334078412634e+02, 5.9998864979057844e+03, 2.9790596383126936e+03, -8.8315028129033396e+02, 1.9394080821042435e+03, 6.5745632051613748e+03, 1.8699637864814138e+03, 3.3997511683176617e+03, 4.7000704428784729e+02, 7.5482930024814868e+02, 3.6000325426501709e+03, 2.8683513409429647e+03, 9.1434989236725742e+03, 5.7150642419454834e+03, 4.4786538481390158e+02, -4.7453602008933615e+02, 0.0000000000000000e+00, 9.5611711364765506e+02, 0.0000000000000000e+00, 2.4506791281389897e+03, 4.0257562679901262e+03, 3.0193172009925951e+02, -2.8683513409429651e+02, 5.0020021629777320e+03, 8.5547320694790178e+03, -3.7993074779156819e+02, 2.5060332768238536e+03, 2.0128781339950632e+02, 6.3908880754343261e+02, 3.8244684545906199e+02, 2.9186732942928421e+02, 1.8115903205955569e+03, 1.1070829736972847e+02, 7.5482930024814868e+02, 9.0982091656576858e+02, 1.2102429780645318e+03};

  cfloat kf[354];
  // 228 rate constants for which an evaluation is necessary
  for(unsigned int i=0; i<228; ++i)
  {
    cfloat blogT = beta[i]*lnT;
    cfloat E_RT = E_R[i]*rcpT;
    cfloat diff = blogT - E_RT;
    kf[i] = __KINETIX_EXP__(A[i] + diff);
  }
  // 100 rate constants with E_R = 0 and beta = 0 
  for(unsigned int i=0; i<100; ++i)
  {
    kf[i+228] = A[i+228];
  }
  // 2 rate constants with E_R = 0 and beta = -2 
  cfloat rcpT_2 = rcpT*rcpT;
  for(unsigned int i=0; i<2; ++i)
  {
    kf[i+328] = A[i+328]*rcpT_2;
  }
  // 4 rate constants with E_R = 0 and beta = -1 
  for(unsigned int i=0; i<4; ++i)
  {
    kf[i+330] = A[i+330]*rcpT;
  }
  // 20 rate constants with E_R and beta the same as for other rate constants already computed 
  for(unsigned int i=0; i<19; ++i)
  {
    kf[i+334] = A[i+334]*kf[i+209];
  }
  kf[353]=A[353]*kf[225];

  // Correct rate constants based on reaction type
  cfloat Cm = 0;
  for(unsigned int i=0; i<53; ++i)
    Cm += Ci[i];

  cfloat eff0 = Cm + 1.4*Ci[0] + 14.4*Ci[5] + Ci[13] + 0.75*Ci[14] + 2.6*Ci[15] + 2.0*Ci[26] - 0.17000000000000004*Ci[52];
  cfloat eff1 = Cm + Ci[0] + 5.0*Ci[5] + Ci[13] + 0.5*Ci[14] + Ci[15] + 2.0*Ci[26] - 0.30000000000000004*Ci[52];
  cfloat eff2 = Cm + Ci[0] + 5.0*Ci[3] + 5.0*Ci[5] + Ci[13] + 0.5*Ci[14] + 2.5*Ci[15] + 2.0*Ci[26] - 0.5*Ci[52];
  cfloat eff3 = Cm - Ci[3] - Ci[5] - 0.25*Ci[14] + 0.5*Ci[15] + 0.5*Ci[26] - Ci[47] - Ci[52];
  cfloat eff4 = Cm - Ci[0] - Ci[5] + Ci[13] - Ci[15] + 2.0*Ci[26] - 0.37*Ci[52];
  cfloat eff5 = Cm - 0.27*Ci[0] + 2.65*Ci[5] + Ci[13] + 2.0*Ci[26] - 0.62*Ci[52];
  cfloat eff6 = Cm + Ci[0] + 5.0*Ci[5] + 2.0*Ci[13] + 0.5*Ci[14] + Ci[15] + 2.0*Ci[26] - 0.30000000000000004*Ci[52];
  cfloat eff7 = Cm + Ci[0] + 5.0*Ci[5] + Ci[13] + 0.5*Ci[14] + Ci[15] + 2.0*Ci[26];
  cfloat eff8 = Cm + Ci[0] - Ci[5] + Ci[13] + 0.5*Ci[14] + Ci[15] + 2.0*Ci[26];
  cfloat eff9 = Cm + Ci[0] + 5.0*Ci[5] + Ci[13] + 0.5*Ci[14] + Ci[15] + 2.0*Ci[26] - 0.375*Ci[52];

  //Correct k for three-body reactions
  kf[330] *= eff0;
  kf[331] *= eff1;
  kf[13] *= eff3;
  kf[332] *= eff4;
  kf[329] *= eff5;
  kf[341] *= eff8;
  kf[126] *= eff1;
  kf[138] *= eff1;
  kf[139] *= eff1;
  kf[147] *= eff1;
  kf[150] *= eff1;
  kf[169] *= eff1;
  //Correct k for pressure-dependent reactions
  kf[4] *= eff2;
  kf[4] /= (1+ kf[4]/(kf[3]+ CFLOAT_MIN));
  kf[124] *= eff9;
  kf[124] /= (1+ kf[124]/(kf[123]+ CFLOAT_MIN));
  kf[155] *= eff1;
  kf[155] /= (1+ kf[155]/(kf[302]+ CFLOAT_MIN));
  //Correct k for troe reactions
  kf[24] *= eff1;
  kf[24] /= (kf[243] + CFLOAT_MIN);
  kf[26] *= eff6;
  kf[26] /= (kf[25] + CFLOAT_MIN);
  kf[29] *= eff1;
  kf[29] /= (kf[28] + CFLOAT_MIN);
  kf[31] *= eff7;
  kf[31] /= (kf[30] + CFLOAT_MIN);
  kf[33] *= eff7;
  kf[33] /= (kf[32] + CFLOAT_MIN);
  kf[36] *= eff7;
  kf[36] /= (kf[35] + CFLOAT_MIN);
  kf[40] *= eff7;
  kf[40] /= (kf[39] + CFLOAT_MIN);
  kf[44] *= eff1;
  kf[44] /= (kf[333] + CFLOAT_MIN);
  kf[46] *= eff1;
  kf[46] /= (kf[45] + CFLOAT_MIN);
  kf[48] *= eff1;
  kf[48] /= (kf[47] + CFLOAT_MIN);
  kf[50] *= eff1;
  kf[50] /= (kf[49] + CFLOAT_MIN);
  kf[53] *= eff1;
  kf[53] /= (kf[52] + CFLOAT_MIN);
  kf[57] *= eff1;
  kf[57] /= (kf[56] + CFLOAT_MIN);
  kf[60] *= eff1;
  kf[60] /= (kf[59] + CFLOAT_MIN);
  kf[67] *= eff7;
  kf[67] /= (kf[66] + CFLOAT_MIN);
  kf[88] *= eff1;
  kf[88] /= (kf[270] + CFLOAT_MIN);
  kf[95] *= eff1;
  kf[95] /= (kf[94] + CFLOAT_MIN);
  kf[97] *= eff7;
  kf[97] /= (kf[96] + CFLOAT_MIN);
  kf[103] *= eff1;
  kf[103] /= (kf[102] + CFLOAT_MIN);
  kf[113] *= eff1;
  kf[113] /= (kf[112] + CFLOAT_MIN);
  kf[159] *= eff7;
  kf[159] /= (kf[158] + CFLOAT_MIN);
  kf[186] *= eff1;
  kf[186] /= (kf[185] + CFLOAT_MIN);
  kf[196] *= eff1;
  kf[196] /= (kf[195] + CFLOAT_MIN);
  kf[197] *= eff1;
  kf[197] /= (kf[323] + CFLOAT_MIN);
  kf[204] *= eff1;
  kf[204] /= (kf[203] + CFLOAT_MIN);
  kf[205] *= eff1;
  kf[205] /= (kf[325] + CFLOAT_MIN);

  const cfloat troe_A[26] = {5.6200000000000006e-01, 7.8300000000000003e-01, 7.8239999999999998e-01, 7.1870000000000001e-01, 7.5800000000000001e-01, 5.9999999999999998e-01, 6.9999999999999996e-01, 6.4639999999999997e-01, 7.5070000000000003e-01, 7.8200000000000003e-01, 9.7529999999999994e-01, 8.4219999999999995e-01, 9.3200000000000005e-01, 7.3460000000000003e-01, 4.1199999999999998e-01, 5.7569999999999999e-01, 5.9070000000000000e-01, 6.0270000000000001e-01, 6.1899999999999999e-01, 7.3450000000000004e-01, 6.6700000000000004e-01, 5.7799999999999996e-01, 4.6500000000000002e-01, 1.5270000000000000e-01, 1.8940000000000001e-01, 3.1500000000000000e-01};
  const cfloat rcp_troe_T1[26] = {1.7135023989033586e-04, 3.4002040122407346e-04, 3.6297640653357529e-04, 7.7459333849728897e-04, 6.4308681672025725e-04, 1.1111111111111112e-05, 1.1111111111111112e-05, 7.6045627376425851e-04, 7.6804915514592934e-04, 3.7551633496057078e-04, 1.0162601626016261e-03, 4.5065344749887338e-04, 6.4935064935064935e-04, 5.6947608200455578e-04, 1.6949152542372882e-04, 6.0532687651331722e-04, 8.1566068515497557e-04, 2.5497195308516065e-04, 8.4745762711864404e-04, 9.6618357487922703e-04, 4.7236655644780352e-04, 3.9447731755424062e-04, 5.6401579244218843e-04, 3.6469730123997083e-04, 1.1431184270690443e-04, 3.0441400304414006e-04};
  const cfloat troe_T2[26] = {8.5520000000000000e+03, 6.9640000000000000e+03, 6.5700000000000000e+03, 4.1600000000000000e+03, 4.2000000000000000e+03, 1.0000000000000000e+04, 1.0000000000000000e+04, 5.5660000000000000e+03, 4.1670000000000000e+03, 6.0950000000000000e+03, 4.3740000000000000e+03, 6.8820000000000000e+03, 1.0300000000000000e+04, 5.1820000000000000e+03, 6.3940000000000000e+03, 5.0690000000000000e+03, 5.1850000000000000e+03, 1.0180000000000000e+04, 9.9990000000000000e+03, 5.4170000000000000e+03, 4.5360000000000000e+03, 9.3650000000000000e+03, 5.3330000000000000e+03, 7.7480000000000000e+03, 7.8910000000000000e+03, 6.6670000000000000e+03};
  const cfloat rcp_troe_T3[26] = {1.0989010989010990e-02, 1.3513513513513514e-02, 3.6900369003690036e-03, 9.7087378640776691e-03, 1.0638297872340425e-02, 1.0000000000000000e-02, 1.0000000000000000e-02, 7.5757575757575760e-03, 1.0152284263959390e-02, 4.8192771084337354e-03, 4.7619047619047623e-03, 8.0000000000000002e-03, 5.0761421319796950e-03, 1.0638297872340425e-02, 5.1282051282051282e-03, 4.2194092827004216e-03, 3.6363636363636364e-03, 4.8076923076923080e-03, 1.3661202185792349e-02, 5.5555555555555558e-03, 4.2553191489361703e-03, 8.1967213114754103e-03, 4.9751243781094526e-03, 3.4364261168384879e-03, 3.6101083032490976e-03, 2.7100271002710027e-03};

  const int ids_troe[26] = {24, 26, 29, 31, 33, 36, 40, 44, 46, 48, 50, 53, 57, 60, 67, 88, 95, 97, 103, 113, 159, 186, 196, 197, 204, 205};
  cfloat logFcent[26];
  for(unsigned int i = 0; i<26; ++i)
  {
    logFcent[i] = __KINETIX_LOG10__((1. - troe_A[i])*__KINETIX_EXP__(-T*rcp_troe_T3[i]) + troe_A[i]*__KINETIX_EXP__(-T*rcp_troe_T1[i]) + __KINETIX_EXP__(-troe_T2[i]*rcpT));
  }
  for(unsigned int i = 0; i<26; ++i)
  {
    cfloat troe_c = -0.4 - 0.67 * logFcent[i];
    cfloat troe_n = 0.75 - 1.27 * logFcent[i];
    cfloat logPr = __KINETIX_LOG10__(kf[ids_troe[i]] + CFLOAT_MIN);
    cfloat troe = (troe_c + logPr)/(troe_n - 0.14*(troe_c + logPr)+CFLOAT_MIN);
    cfloat F = __KINETIX_POW__(10, logFcent[i]/(1. + troe*troe));
    kf[ids_troe[i]] /= (1.+kf[ids_troe[i]]);
    kf[ids_troe[i]] *= F;
  }
  kf[24] *= kf[243];
  kf[26] *= kf[25];
  kf[29] *= kf[28];
  kf[31] *= kf[30];
  kf[33] *= kf[32];
  kf[36] *= kf[35];
  kf[40] *= kf[39];
  kf[44] *= kf[333];
  kf[46] *= kf[45];
  kf[48] *= kf[47];
  kf[50] *= kf[49];
  kf[53] *= kf[52];
  kf[57] *= kf[56];
  kf[60] *= kf[59];
  kf[67] *= kf[66];
  kf[88] *= kf[270];
  kf[95] *= kf[94];
  kf[97] *= kf[96];
  kf[103] *= kf[102];
  kf[113] *= kf[112];
  kf[159] *= kf[158];
  kf[186] *= kf[185];
  kf[196] *= kf[195];
  kf[197] *= kf[323];
  kf[204] *= kf[203];
  kf[205] *= kf[325];

  // Compute the gibbs energy
  const cfloat a0[106] = {2.3443311200000001e+00, 2.5000000000000000e+00, 3.1682671000000000e+00, 3.7824563599999999e+00, 3.9920154299999999e+00, 4.1986405600000003e+00, 4.3017980099999997e+00, 4.2761126899999997e+00, 2.5542395500000001e+00, 3.4898166499999999e+00, 3.7626786700000001e+00, 4.1986041099999998e+00, 3.6735904000000001e+00, 5.1498761300000000e+00, 3.5795334699999999e+00, 2.3567735200000000e+00, 4.2211858400000004e+00, 4.7937231499999999e+00, 3.8638891800000001e+00, 2.1062040000000000e+00, 5.7153958200000003e+00, 2.8896573299999999e+00, 8.0868109399999999e-01, 3.2124664500000000e+00, 3.9592014799999999e+00, 4.3064656799999996e+00, 4.2914249199999999e+00, 2.2517214000000001e+00, 2.1358362999999998e+00, 1.2423732999999999e+00, 2.5000000000000000e+00, 3.4929085000000000e+00, 4.2040028999999999e+00, 4.2860274000000000e+00, 4.3446927000000004e+00, 4.2184762999999998e+00, 3.9440312000000000e+00, 2.2571501999999999e+00, 4.5334915999999996e+00, 3.6129351000000001e+00, 2.2589885999999999e+00, 2.8516610000000000e+00, 2.5243194000000000e+00, 2.8269308000000000e+00, 3.2986770000000001e+00, 1.0515517999999999e+00, 9.3355381000000004e-01, 3.4090620000000000e+00, 4.7294594999999999e+00, 2.5000000000000000e+00, 3.3372791999999998e+00, 2.5000000099999999e+00, 2.5694207800000002e+00, 3.2825378399999998e+00, 3.0928876700000001e+00, 3.0339924900000002e+00, 4.0172109000000003e+00, 4.1650028499999996e+00, 2.4926688800000001e+00, 2.8784647300000001e+00, 2.8741011300000001e+00, 2.2920384199999999e+00, 2.2857177200000001e+00, 7.4851495000000004e-02, 2.7151856099999998e+00, 3.8574602900000001e+00, 2.7721743800000000e+00, 1.7606900800000000e+00, 3.6926656900000001e+00, 3.7707989999999998e+00, 1.7897079100000000e+00, 3.1678065200000001e+00, 4.1475696400000004e+00, 3.0167240000000000e+00, 2.0361111599999999e+00, 1.9546564200000001e+00, 1.0718814999999999e+00, 5.6282057999999999e+00, 4.5112973199999997e+00, 5.9238290999999998e+00, 2.4159429000000001e+00, 2.7836927999999999e+00, 2.8347421000000002e+00, 2.6344520999999999e+00, 3.7667543999999999e+00, 3.2606055999999999e+00, 4.8847541999999997e+00, 4.8230728999999997e+00, 2.9792508999999998e+00, 3.7459804999999999e+00, 3.8022391999999998e+00, 5.2097030000000002e+00, 5.8946361999999999e+00, 5.1521844999999997e+00, 2.9266399999999999e+00, 7.7026987000000000e+00, 7.5341367999999997e+00, 5.9756700000000000e+00, 5.4041107999999998e+00, 2.5000000000000000e+00, 3.7860495200000002e+00, 5.8978488499999999e+00, 2.6472798900000001e+00, 6.5986045600000001e+00, 3.6309631699999998e+00, 6.2239513400000002e+00};

  const cfloat a1[106] = {-3.9902603749999996e-03, -3.5266640949999999e-13, 1.6396594200000000e-03, 1.4983670799999999e-03, 1.2006587600000001e-03, 1.0182170500000001e-03, 2.3745602549999998e-03, 2.7141120849999997e-04, 1.6076886199999999e-04, -1.6191777050000001e-04, -4.8443607150000002e-04, 1.1833070950000000e-03, -1.0054758750000000e-03, 6.8354894000000003e-03, 3.0517684000000000e-04, -4.4922983850000002e-03, 1.6219626600000000e-03, 4.9541668450000000e-03, -2.7983615200000002e-03, -3.6082975000000001e-03, 7.6154564500000004e-03, -6.7049805499999997e-03, -1.1680781450000000e-02, -7.5739581000000002e-04, 3.7852612350000002e-03, 2.0932944600000002e-03, 2.7507713499999998e-03, -8.8275105000000000e-03, -9.0594360499999995e-03, -1.5536100500000000e-02, -0.0000000000000000e+00, -1.5589599000000000e-04, 1.0530692500000001e-03, 2.3302614999999999e-03, 2.4248536000000000e-03, 2.3194880000000002e-03, 7.9271449999999998e-04, -5.6523640000000000e-03, 2.8348085499999998e-03, 4.7775663499999998e-04, -5.0255849999999999e-03, -2.8476165499999998e-03, -7.9803094999999994e-03, -4.4025844000000003e-03, -7.0412019999999999e-04, -1.2995990000000001e-02, -1.3212289500000000e-02, -5.3692870000000004e-03, 1.5966429000000000e-03, -0.0000000000000000e+00, 2.4701236549999999e-05, 1.1542148649999999e-11, 4.2987056850000002e-05, -7.4154376999999996e-04, -2.7421485799999999e-04, -1.0884590200000001e-03, -1.1199100650000000e-03, -2.4541584700000000e-03, -2.3994464200000000e-05, -4.8545684050000000e-04, -1.8281964599999999e-03, -2.3279431850000000e-03, -3.6199501849999999e-03, -6.6954733499999999e-03, -1.0312637150000001e-03, -2.2071851299999999e-03, -2.4784776299999998e-03, -4.6000004100000000e-03, -4.3228839850000004e-03, -3.9357484999999999e-03, -7.0469145999999998e-03, -2.3761095100000001e-03, -2.9808333200000000e-03, -5.1651146000000004e-03, -7.3227075499999999e-03, -8.6986361000000005e-03, -1.0842633850000000e-02, -2.0426700500000001e-03, -4.5017987249999997e-03, -3.3961799999999999e-03, -8.7445325000000003e-05, -6.6492150000000002e-04, -1.6036541000000000e-03, -2.8331279999999999e-03, -1.4457541000000001e-03, -5.9555215000000000e-04, -1.0861978000000000e-03, -1.3135125499999999e-03, -1.7472029500000001e-03, -2.1725387500000000e-05, -1.5732114000000001e-03, -1.4846455499999999e-03, -1.9947979500000001e-03, -1.1525880500000000e-03, -7.4398840000000003e-04, -8.0221015000000000e-03, -9.4361194999999995e-03, -4.0652954999999998e-03, -5.8615294999999996e-03, -0.0000000000000000e+00, -3.4433396099999999e-03, -1.5839469650000000e-03, -6.3752671000000000e-03, -1.5138931300000000e-03, -3.6514117850000001e-03, -1.5893200200000001e-03};

  const cfloat a2[106] = {3.2463585000000002e-06, 3.3265327333333338e-16, -1.1071773266666667e-06, -1.6412170016666668e-06, -7.6965640166666664e-07, -1.0867336850000000e-06, -3.5263815166666667e-06, -2.7889283500000007e-06, -1.2229870750000003e-07, 2.8149844166666669e-07, -4.6581640166666675e-07, -1.3721603666666668e-06, -9.5503642666666677e-07, -8.1966766500000004e-06, -1.6946905500000003e-07, 1.1872604483333334e-06, -2.2966574333333338e-06, -6.2203334666666671e-06, -9.8878631833333339e-07, -8.8974533333333345e-07, -1.0874019250000001e-05, 4.7461583500000003e-06, 5.9195302500000001e-06, -4.3201568666666672e-06, -9.5165048666666682e-06, -8.2857134500000004e-06, -9.9906381333333344e-06, 3.9548501666666673e-06, 2.8991245666666669e-06, 8.4778106666666673e-06, -0.0000000000000000e+00, 2.4817473333333340e-07, -1.1844724666666669e-06, -3.6197521666666674e-06, -3.3432431666666671e-06, -1.8401703333333335e-06, -2.7763020000000005e-06, 2.2785531666666668e-06, -3.0788678333333337e-06, -3.5738295000000005e-07, 2.2252938333333338e-06, -1.7852333333333336e-07, 3.1360590000000003e-06, 1.3977689000000002e-06, 6.6053700000000003e-07, -3.9667566666666668e-07, -1.0176621166666668e-06, -3.1524866666666670e-07, -7.9224868333333354e-06, -0.0000000000000000e+00, -8.3242796333333340e-08, -2.6926991333333336e-15, -6.9914098166666681e-09, 1.2632777816666668e-07, -2.1084204666666666e-08, 2.7345419666666667e-08, 1.0560969166666667e-07, 3.1689870833333336e-07, 1.2072250333333335e-08, -2.4074275833333334e-08, 2.3482432833333336e-07, 3.3531991166666666e-07, 4.9785724666666676e-07, 9.5547634833333348e-07, 1.6647096183333335e-07, 3.6913567333333336e-07, 4.1407602166666674e-07, 7.3709802166666673e-07, 6.2516853333333346e-07, 4.4273066666666673e-07, 1.0608347250000002e-06, 3.0631179500000005e-07, 3.9549142000000002e-07, 7.8013724833333337e-07, 1.1184631916666668e-06, 1.3303444466666667e-06, 1.6709344500000002e-06, 2.6557578333333338e-07, 6.9489939166666673e-07, 4.2764273333333340e-07, 1.9837281666666669e-08, 7.0796745000000010e-08, 1.5565134000000001e-07, 2.8797793333333339e-07, 1.7361033333333335e-07, 7.1528413333333345e-08, 1.3801151000000000e-07, 1.5975145666666668e-07, 1.3091629666666670e-07, -4.9509973333333338e-08, 1.7720308333333336e-07, 4.7593151666666671e-08, 2.6637300000000005e-07, 1.4672192166666669e-07, 9.4746000000000007e-08, 8.8055366666666675e-07, 1.0453081833333334e-06, 4.5727066666666676e-07, 7.0438561666666671e-07, -0.0000000000000000e+00, 5.3581310666666673e-07, 1.8633510666666667e-07, 1.7465706000000000e-06, 1.7950724333333333e-07, 3.8008333833333334e-07, 1.8229792500000000e-07};

  const cfloat a3[106] = {-1.6797674499999997e-09, -1.9173469333333329e-19, 5.1067218666666654e-10, 8.0677459083333326e-10, 3.2342777749999991e-10, 4.5733088499999992e-10, 2.0230324499999997e-09, 1.7980901083333328e-09, 6.1019574083333315e-11, -2.6351443916666659e-10, 3.2090929416666660e-10, 5.5734665083333319e-10, 5.7259785416666654e-10, 4.0395252166666663e-09, -7.5583823666666643e-11, -2.0493251833333327e-10, 1.1095341083333331e-09, 3.1607105083333323e-09, 8.7110009999999985e-10, 6.1480299999999981e-10, 5.9233907416666657e-09, -2.4565920416666660e-09, -2.3346036416666662e-09, 2.9804820583333325e-09, 5.7632396083333322e-09, 4.9927217166666655e-09, 5.9038857083333321e-09, -1.4396465833333331e-09, -7.7866463999999986e-10, -3.5947609166666661e-09, -0.0000000000000000e+00, -2.0680368333333327e-10, 4.6762664166666656e-10, 1.9007405833333330e-09, 1.8105386666666663e-09, 7.7801128333333314e-10, 1.7062854999999997e-09, -8.0683171666666655e-10, 1.4280911666666663e-09, 2.6263602499999994e-11, -8.4102908333333322e-10, 1.3521766666666664e-10, -1.0104616666666665e-09, -4.0014136666666658e-10, -4.7012624999999995e-10, 1.6341307499999996e-09, 1.8314582499999994e-09, 5.9654858333333320e-10, 4.7882175833333317e-09, -0.0000000000000000e+00, 1.4963866166666665e-11, 3.9459602916666661e-19, 8.3481499166666637e-13, -1.7455879583333328e-11, 7.3288462999999985e-12, 8.0868322499999983e-12, -9.5205308333333310e-12, -3.0932165499999990e-11, -3.1190919083333330e-12, 1.0890654083333332e-11, -2.1681629083333328e-11, -3.4825499999999991e-11, -4.9640386999999993e-11, -1.0191044583333332e-10, -1.9171083999999996e-11, -4.3624182333333331e-11, -4.9096814833333324e-11, -8.3867676666666647e-11, -6.5602886333333324e-11, -3.2870258333333326e-11, -1.1514257083333331e-10, -2.5349187666666658e-11, -3.8951014249999994e-11, -8.4802739999999973e-11, -1.2268576916666666e-10, -1.4601474083333330e-10, -1.8451000083333330e-10, -2.3855043333333327e-11, -7.6945490166666642e-11, -3.7489867499999989e-11, -2.5188537499999993e-12, -6.5290417499999984e-12, -1.1419127499999997e-11, -1.9889300833333329e-11, -1.4035494999999996e-11, -5.7881390833333320e-12, -1.3122924999999998e-11, -1.3333926666666663e-11, -4.7899661666666661e-12, 5.7209838333333316e-12, -1.3849797499999997e-11, 1.3629583333333331e-11, -2.4374495833333330e-11, -1.2324248333333329e-11, -8.4141983333333318e-12, -6.3582158333333321e-11, -7.6229707499999981e-11, -3.3919199999999995e-11, -5.6977042499999989e-11, -0.0000000000000000e+00, -4.3099647249999987e-11, -1.4770261999999997e-11, -3.6786069666666657e-10, -1.4305543999999997e-11, 5.5105941499999991e-11, -1.4227930249999996e-11};

  const cfloat a4[106] = {3.6880588049999994e-13, 4.6386616599999991e-23, -1.0563298549999997e-13, -1.6218641849999997e-13, -6.8205734999999986e-14, -8.8598908499999975e-14, -4.6461256199999996e-13, -4.3122718149999990e-13, -1.3326072299999997e-14, 7.0304533499999983e-14, -8.4370859499999985e-14, -9.7157368499999978e-14, -1.2719286699999998e-13, -8.3346977999999979e-13, 4.5221224949999991e-14, 7.1849773999999976e-15, -2.1688443249999995e-13, -6.5886325999999982e-13, -2.1848363899999995e-13, -1.0378049999999997e-13, -1.3067634899999997e-12, 5.4665755499999986e-13, 4.2503648699999988e-13, -7.3575436499999978e-13, -1.3494218649999997e-12, -1.1525450199999997e-12, -1.3434288549999996e-12, 2.5332405499999993e-13, 1.0072880749999997e-13, 7.0072969999999981e-13, -0.0000000000000000e+00, 5.1784834999999989e-14, -8.2203584999999985e-14, -4.1319022999999990e-13, -3.9734769499999991e-13, -1.4017884999999996e-13, -3.9175281999999989e-13, 1.4653590999999997e-13, -2.7727286499999995e-13, 2.3215177999999992e-14, 1.5044513999999995e-13, 1.1755540499999997e-14, 1.6178688999999998e-13, 6.6567974999999980e-14, 1.2224269999999996e-13, -4.6866234999999989e-13, -4.7574626499999985e-13, -1.4336924999999997e-13, -1.0965555999999998e-12, -0.0000000000000000e+00, -1.0012768799999997e-15, -2.4909867849999996e-23, -6.1416845499999981e-17, 1.0835889699999997e-15, -5.8706187999999988e-16, -8.4100495999999976e-16, 5.3954267499999990e-16, 1.4395415249999998e-15, 2.4363894649999992e-16, -8.8039691499999973e-16, 9.3863783499999980e-16, 1.6985818249999996e-15, 2.3357719699999997e-15, 5.0907614999999989e-15, 1.0182385799999998e-15, 2.3604208199999997e-15, 2.6675435549999993e-15, 4.4192781999999990e-15, 3.2427710049999995e-15, 1.0563079999999998e-15, 5.8530109999999983e-15, 8.8616384999999979e-16, 1.8061760649999996e-15, 4.3130352049999989e-15, 6.2853030499999985e-15, 7.4820787999999981e-15, 9.5001444999999982e-15, 9.7039159999999969e-16, 3.9741910049999990e-15, 1.4970050499999996e-15, 1.0180490999999998e-16, 2.7522234999999994e-16, 3.9603071999999997e-16, 6.2893929999999985e-16, 5.0459479999999991e-16, 2.0168049499999994e-16, 5.2554474999999989e-16, 4.8876151499999980e-16, 9.6679579999999986e-18, -2.2067086499999996e-16, 4.8998784999999989e-16, -1.5216294499999995e-15, 1.0047342999999999e-15, 4.5488997999999989e-16, 3.3766754999999992e-16, 1.9696141999999997e-15, 2.3919034499999995e-15, 1.0880084999999998e-15, 2.0492431499999996e-15, -0.0000000000000000e+00, -5.9680393999999984e-16, 5.2169588499999983e-16, 3.7876073299999989e-14, 5.0719695499999990e-16, -1.8111787599999995e-14, 4.9751097749999990e-16};

  const cfloat a5[106] = {-9.1793517299999996e+02, 2.5473659899999999e+04, 2.9122259200000000e+04, -1.0639435599999999e+03, 3.6150805599999999e+03, -3.0293726699999999e+04, 2.9480804000000001e+02, -1.7702582100000000e+04, 8.5443883199999997e+04, 7.0797293399999995e+04, 4.6004040099999998e+04, 5.0496816299999999e+04, 1.6444998800000001e+04, -1.0246647600000000e+04, -1.4344085999999999e+04, -4.8371969700000001e+04, 3.8395649600000002e+03, -1.4308956700000001e+04, -3.1939136699999999e+03, 9.7860109999999997e+02, -2.5642765599999999e+04, 6.6839393200000006e+04, 2.6428980700000000e+04, 3.4859846799999999e+04, 5.0897759299999998e+03, 1.2841626500000000e+04, -1.1522205500000000e+04, 2.0059449000000001e+04, -7.0429180399999996e+03, 8.0316143000000002e+03, 5.6104637000000002e+04, 4.1880629000000001e+04, 2.1885910000000000e+04, -6.7417285000000002e+03, 2.8791973000000002e+04, 9.8446229999999996e+03, 2.8966179000000002e+03, 8.7417744000000002e+03, 1.1548297000000000e+04, 5.1708339999999997e+04, 1.4712633000000000e+04, 2.8637820000000000e+04, 5.4261983999999997e+04, 1.4682477000000001e+04, -1.0208999000000000e+03, 1.0631862999999999e+04, -1.3958520000000000e+04, 1.5214766000000000e+03, -2.1572878000000001e+04, -7.4537500000000000e+02, -9.5015892199999996e+02, 2.5473659899999999e+04, 2.9217579099999999e+04, -1.0884577200000001e+03, 3.8586570000000002e+03, -3.0004297100000000e+04, 1.1185671300000000e+02, -1.7861787700000001e+04, 8.5451295299999998e+04, 7.1012436400000006e+04, 4.6263603999999999e+04, 5.0925999700000000e+04, 1.6775584299999999e+04, -9.4683445900000006e+03, -1.4151872400000000e+04, -4.8759165999999997e+04, 4.0119181500000000e+03, -1.3995832300000000e+04, -3.2425062699999999e+03, 1.2783252000000000e+02, -2.5374874700000000e+04, 6.7121065000000002e+04, 2.5935999199999998e+04, 3.4612873899999999e+04, 4.9398861399999996e+03, 1.2857520000000000e+04, -1.1426393200000000e+04, 1.9327215000000000e+04, -7.5510531099999998e+03, 7.2646260000000002e+03, 5.6133773000000001e+04, 4.2120847999999998e+04, 2.2171956999999999e+04, -6.5446958000000004e+03, 2.8650697000000000e+04, 9.9209745999999996e+03, 2.3164983000000002e+03, 8.0734048000000003e+03, 1.1750582000000000e+04, 5.1536188000000002e+04, 1.4407291999999999e+04, 2.7677109000000000e+04, 5.3452940999999999e+04, 1.4004123000000000e+04, -9.2279769999999996e+02, 8.2984336000000003e+03, -1.6467516000000000e+04, 4.9032180000000000e+02, -2.2593121999999999e+04, -7.4537500000000000e+02, -2.8269839999999999e+03, -3.7065333099999998e+03, 1.9299025200000000e+04, 1.7966133900000001e+04, -1.5587363600000001e+04, -1.6659934399999998e+04};

  const cfloat a6[106] = {6.8301023800000005e-01, -4.4668285299999999e-01, 2.0519334599999999e+00, 3.6576757299999998e+00, -1.0392545800000000e-01, -8.4903220800000001e-01, 3.7166624499999998e+00, 3.4350507399999999e+00, 4.5313084799999999e+00, 2.0840110799999998e+00, 1.5625318500000001e+00, -7.6911896700000004e-01, 1.6045643300000001e+00, -4.6413037599999996e+00, 3.5084092800000000e+00, 9.9010522200000004e+00, 3.3943724300000002e+00, 6.0281289999999998e-01, 5.4730224300000003e+00, 1.3152177000000000e+01, -1.5040982300000001e+00, 6.2229643799999996e+00, 1.3939705099999999e+01, 8.5105402500000000e+00, 4.0973309599999999e+00, 4.7072092400000001e+00, 2.6668231599999999e+00, 1.2490417000000001e+01, 1.2215648000000000e+01, 1.3874319000000000e+01, 4.1939086999999997e+00, 1.8483278000000001e+00, -1.4184247999999999e-01, -6.2537277000000002e-01, 2.9779409999999999e+00, 2.2808464000000002e+00, 6.3119917000000001e+00, 1.0757992000000000e+01, 1.7498416999999999e+00, 3.9804995000000001e+00, 8.9164419000000006e+00, 8.9927510999999996e+00, 1.1675870000000000e+01, 9.5504645999999997e+00, 3.9503720000000002e+00, 2.1122558999999999e+01, 1.9201691000000000e+01, 9.5582899999999995e+00, 4.1030158999999999e+00, 4.3659999999999997e+00, -3.2050233100000001e+00, -4.4668291399999999e-01, 4.7843386399999996e+00, 5.4532312899999997e+00, 4.4766960999999998e+00, 4.9667700999999997e+00, 3.7851021500000002e+00, 2.9161566200000002e+00, 4.8015037300000003e+00, 5.4849799900000002e+00, 6.1711932400000000e+00, 8.6265016899999996e+00, 8.4800717900000002e+00, 1.8437318000000001e+01, 7.8186877199999998e+00, 2.2716380599999999e+00, 9.7983449199999999e+00, 1.3656323000000000e+01, 5.8104321499999996e+00, 2.9295749999999998e+00, 1.4502362300000000e+01, 6.6358947500000003e+00, -1.2302812100000000e+00, 7.7873237800000004e+00, 1.0305369300000001e+01, 1.3462434300000000e+01, 1.5115610700000000e+01, -3.9302595000000000e+00, 6.3224720499999998e-01, -7.6017742000000004e+00, 4.6496095999999998e+00, 5.7407798999999997e+00, 6.5204162999999999e+00, 6.5662928000000003e+00, 4.4705066999999996e+00, 6.3693027000000004e+00, -1.1741695000000001e-01, -2.2017207000000001e+00, 8.6063728000000008e+00, 2.7867601000000000e+00, 1.5754600999999999e+00, -4.4444780000000002e+00, -5.1030502000000002e+00, -2.5442659999999999e+00, 5.9805279999999996e+00, -1.5480180000000001e+01, -1.7892348999999999e+01, -5.0452510000000004e+00, -3.4807917000000002e+00, 4.3659999999999997e+00, 5.6329216200000003e+00, -6.1816782500000000e+00, 1.0733297200000001e+01, -1.0330659900000001e+01, 6.1945772699999999e+00, -8.3822474099999997e+00};

  cfloat gibbs0_RT[53];
  unsigned int offset;
  unsigned int i_off;
  offset = 0 + (T>1000.0)*50;
  for(unsigned int i=0; i<50; ++i)
  {
    i_off = i + offset;
    gibbs0_RT[i+0] = a0[i_off]*(1-lnT) + a1[i_off]*T + a2[i_off]*T2 +a3[i_off]*T3 + a4[i_off]*T4 + a5[i_off]*rcpT - a6[i_off];
  }

  offset = 100 + (T>1368.0);
  for(unsigned int i=0; i<1; ++i)
  {
    i_off = i + offset;
    gibbs0_RT[i+50] = a0[i_off]*(1-lnT) + a1[i_off]*T + a2[i_off]*T2 +a3[i_off]*T3 + a4[i_off]*T4 + a5[i_off]*rcpT - a6[i_off];
  }

  offset = 102 + (T>1382.0);
  for(unsigned int i=0; i<1; ++i)
  {
    i_off = i + offset;
    gibbs0_RT[i+51] = a0[i_off]*(1-lnT) + a1[i_off]*T + a2[i_off]*T2 +a3[i_off]*T3 + a4[i_off]*T4 + a5[i_off]*rcpT - a6[i_off];
  }

  offset = 104 + (T>1478.0);
  for(unsigned int i=0; i<1; ++i)
  {
    i_off = i + offset;
    gibbs0_RT[i+52] = a0[i_off]*(1-lnT) + a1[i_off]*T + a2[i_off]*T2 +a3[i_off]*T3 + a4[i_off]*T4 + a5[i_off]*rcpT - a6[i_off];
  }

  // Group the gibbs exponentials
  for(unsigned int i=0; i<53; ++i)
    gibbs0_RT[i] = __KINETIX_EXP__(gibbs0_RT[i]);

  // Compute the reciprocal of the gibbs exponential
  const int ids_rcp_gibbs[49] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 51, 52, 43, 44, 45, 46, 47, 48};
  cfloat rcp_gibbs0_RT[49];
  for(unsigned int i=0; i<49; ++i)
    rcp_gibbs0_RT[i] = 1./gibbs0_RT[ids_rcp_gibbs[i]];

  // Compute reverse rates
  cfloat kr[309]; 
  cfloat C0 = 12186.596374704217 * rcpT;
  cfloat rcpC0 = 8.205736608095969e-05 * T;
  kr[0] = rcp_gibbs0_RT[2]*rcp_gibbs0_RT[2]*gibbs0_RT[3] * C0;
  kr[1] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[2]*gibbs0_RT[4] * C0;
  kr[2] = rcp_gibbs0_RT[0]*gibbs0_RT[1]*rcp_gibbs0_RT[2]*gibbs0_RT[4];
  kr[3] = rcp_gibbs0_RT[2]*gibbs0_RT[3]*gibbs0_RT[4]*rcp_gibbs0_RT[6];
  kr[4] = rcp_gibbs0_RT[2]*gibbs0_RT[4]*gibbs0_RT[6]*rcp_gibbs0_RT[7];
  kr[5] = gibbs0_RT[1]*rcp_gibbs0_RT[2]*rcp_gibbs0_RT[9]*gibbs0_RT[14];
  kr[6] = gibbs0_RT[1]*rcp_gibbs0_RT[2]*rcp_gibbs0_RT[10]*gibbs0_RT[16];
  kr[7] = gibbs0_RT[0]*rcp_gibbs0_RT[2]*rcp_gibbs0_RT[11]*gibbs0_RT[14];
  kr[8] = gibbs0_RT[1]*rcp_gibbs0_RT[2]*rcp_gibbs0_RT[11]*gibbs0_RT[16];
  kr[9] = gibbs0_RT[1]*rcp_gibbs0_RT[2]*rcp_gibbs0_RT[12]*gibbs0_RT[17];
  kr[10] = rcp_gibbs0_RT[2]*gibbs0_RT[4]*gibbs0_RT[12]*rcp_gibbs0_RT[13];
  kr[11] = rcp_gibbs0_RT[2]*rcp_gibbs0_RT[14]*gibbs0_RT[15] * C0;
  kr[12] = rcp_gibbs0_RT[2]*gibbs0_RT[4]*gibbs0_RT[14]*rcp_gibbs0_RT[16];
  kr[13] = gibbs0_RT[1]*rcp_gibbs0_RT[2]*gibbs0_RT[15]*rcp_gibbs0_RT[16];
  kr[14] = rcp_gibbs0_RT[2]*gibbs0_RT[4]*gibbs0_RT[16]*rcp_gibbs0_RT[17];
  kr[15] = rcp_gibbs0_RT[2]*gibbs0_RT[4]*gibbs0_RT[17]*rcp_gibbs0_RT[18];
  kr[16] = rcp_gibbs0_RT[2]*gibbs0_RT[4]*gibbs0_RT[17]*rcp_gibbs0_RT[19];
  kr[17] = rcp_gibbs0_RT[2]*gibbs0_RT[4]*gibbs0_RT[18]*rcp_gibbs0_RT[20];
  kr[18] = rcp_gibbs0_RT[2]*gibbs0_RT[4]*gibbs0_RT[19]*rcp_gibbs0_RT[20];
  kr[19] = rcp_gibbs0_RT[2]*gibbs0_RT[9]*gibbs0_RT[14]*rcp_gibbs0_RT[21];
  kr[20] = gibbs0_RT[1]*rcp_gibbs0_RT[2]*rcp_gibbs0_RT[22]*gibbs0_RT[27];
  kr[21] = rcp_gibbs0_RT[2]*gibbs0_RT[4]*gibbs0_RT[21]*rcp_gibbs0_RT[22];
  kr[22] = rcp_gibbs0_RT[2]*gibbs0_RT[10]*gibbs0_RT[14]*rcp_gibbs0_RT[22];
  kr[23] = gibbs0_RT[1]*rcp_gibbs0_RT[2]*rcp_gibbs0_RT[23]*gibbs0_RT[28];
  kr[24] = rcp_gibbs0_RT[2]*gibbs0_RT[12]*gibbs0_RT[16]*rcp_gibbs0_RT[24];
  kr[25] = rcp_gibbs0_RT[2]*gibbs0_RT[12]*gibbs0_RT[17]*rcp_gibbs0_RT[25];
  kr[26] = rcp_gibbs0_RT[2]*gibbs0_RT[4]*gibbs0_RT[25]*rcp_gibbs0_RT[26];
  kr[27] = gibbs0_RT[1]*rcp_gibbs0_RT[2]*gibbs0_RT[14]*gibbs0_RT[14]*rcp_gibbs0_RT[27] * rcpC0;
  kr[28] = rcp_gibbs0_RT[2]*gibbs0_RT[4]*gibbs0_RT[27]*rcp_gibbs0_RT[28];
  kr[29] = rcp_gibbs0_RT[2]*gibbs0_RT[10]*gibbs0_RT[15]*rcp_gibbs0_RT[28];
  kr[30] = gibbs0_RT[2]*rcp_gibbs0_RT[3]*rcp_gibbs0_RT[14]*gibbs0_RT[15];
  kr[31] = rcp_gibbs0_RT[3]*gibbs0_RT[6]*gibbs0_RT[16]*rcp_gibbs0_RT[17];
  kr[32] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[3]*gibbs0_RT[6] * C0;
  kr[33] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[3]*gibbs0_RT[6] * C0;
  kr[34] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[3]*gibbs0_RT[6] * C0;
  kr[35] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[3]*gibbs0_RT[6] * C0;
  kr[36] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[3]*gibbs0_RT[6] * C0;
  kr[37] = rcp_gibbs0_RT[1]*gibbs0_RT[2]*rcp_gibbs0_RT[3]*gibbs0_RT[4];
  kr[38] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*rcp_gibbs0_RT[1] * C0;
  kr[39] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*rcp_gibbs0_RT[1] * C0;
  kr[40] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*rcp_gibbs0_RT[1] * C0;
  kr[41] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*rcp_gibbs0_RT[1] * C0;
  kr[42] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[4]*gibbs0_RT[5] * C0;
  kr[43] = rcp_gibbs0_RT[1]*gibbs0_RT[2]*gibbs0_RT[5]*rcp_gibbs0_RT[6];
  kr[44] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[3]*rcp_gibbs0_RT[6];
  kr[45] = rcp_gibbs0_RT[1]*gibbs0_RT[4]*gibbs0_RT[4]*rcp_gibbs0_RT[6];
  kr[46] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[6]*rcp_gibbs0_RT[7];
  kr[47] = rcp_gibbs0_RT[1]*gibbs0_RT[4]*gibbs0_RT[5]*rcp_gibbs0_RT[7];
  kr[48] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[8]*rcp_gibbs0_RT[9];
  kr[49] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[10]*gibbs0_RT[12] * C0;
  kr[50] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[9]*rcp_gibbs0_RT[11];
  kr[51] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[12]*gibbs0_RT[13] * C0;
  kr[52] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[12]*rcp_gibbs0_RT[13];
  kr[53] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[16]*gibbs0_RT[17] * C0;
  kr[54] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[14]*rcp_gibbs0_RT[16];
  kr[55] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[17]*gibbs0_RT[18] * C0;
  kr[56] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[17]*gibbs0_RT[19] * C0;
  kr[57] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[16]*rcp_gibbs0_RT[17];
  kr[58] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[18]*gibbs0_RT[20] * C0;
  kr[59] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[17]*rcp_gibbs0_RT[18];
  kr[60] = rcp_gibbs0_RT[1]*gibbs0_RT[4]*gibbs0_RT[12]*rcp_gibbs0_RT[18];
  kr[61] = rcp_gibbs0_RT[1]*gibbs0_RT[5]*gibbs0_RT[11]*rcp_gibbs0_RT[18];
  kr[62] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[19]*gibbs0_RT[20] * C0;
  kr[63] = gibbs0_RT[18]*rcp_gibbs0_RT[19];
  kr[64] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[17]*rcp_gibbs0_RT[19];
  kr[65] = rcp_gibbs0_RT[1]*gibbs0_RT[4]*gibbs0_RT[12]*rcp_gibbs0_RT[19];
  kr[66] = rcp_gibbs0_RT[1]*gibbs0_RT[5]*gibbs0_RT[11]*rcp_gibbs0_RT[19];
  kr[67] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[18]*rcp_gibbs0_RT[20];
  kr[68] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[19]*rcp_gibbs0_RT[20];
  kr[69] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[21]*gibbs0_RT[22] * C0;
  kr[70] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[22]*gibbs0_RT[23] * C0;
  kr[71] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[23]*gibbs0_RT[24] * C0;
  kr[72] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[22]*rcp_gibbs0_RT[23];
  kr[73] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[24]*gibbs0_RT[25] * C0;
  kr[74] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[23]*rcp_gibbs0_RT[24];
  kr[75] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[25]*gibbs0_RT[26] * C0;
  kr[76] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[24]*rcp_gibbs0_RT[25];
  kr[77] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[25]*rcp_gibbs0_RT[26];
  kr[78] = rcp_gibbs0_RT[1]*gibbs0_RT[11]*gibbs0_RT[14]*rcp_gibbs0_RT[27];
  kr[79] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[27]*rcp_gibbs0_RT[28];
  kr[80] = rcp_gibbs0_RT[1]*gibbs0_RT[12]*gibbs0_RT[14]*rcp_gibbs0_RT[28];
  kr[81] = gibbs0_RT[28]*(1./gibbs0_RT[29]);
  kr[82] = rcp_gibbs0_RT[0]*rcp_gibbs0_RT[14]*gibbs0_RT[17] * C0;
  kr[83] = rcp_gibbs0_RT[0]*gibbs0_RT[1]*rcp_gibbs0_RT[4]*gibbs0_RT[5];
  kr[84] = rcp_gibbs0_RT[4]*rcp_gibbs0_RT[4]*gibbs0_RT[7] * C0;
  kr[85] = gibbs0_RT[2]*rcp_gibbs0_RT[4]*rcp_gibbs0_RT[4]*gibbs0_RT[5];
  kr[86] = gibbs0_RT[3]*rcp_gibbs0_RT[4]*gibbs0_RT[5]*rcp_gibbs0_RT[6];
  kr[87] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[6]*rcp_gibbs0_RT[7];
  kr[88] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[6]*rcp_gibbs0_RT[7];
  kr[89] = gibbs0_RT[1]*rcp_gibbs0_RT[4]*rcp_gibbs0_RT[8]*gibbs0_RT[14];
  kr[90] = gibbs0_RT[1]*rcp_gibbs0_RT[4]*rcp_gibbs0_RT[9]*gibbs0_RT[16];
  kr[91] = gibbs0_RT[1]*rcp_gibbs0_RT[4]*rcp_gibbs0_RT[10]*gibbs0_RT[17];
  kr[92] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[9]*rcp_gibbs0_RT[10];
  kr[93] = gibbs0_RT[1]*rcp_gibbs0_RT[4]*rcp_gibbs0_RT[11]*gibbs0_RT[17];
  kr[94] = rcp_gibbs0_RT[4]*rcp_gibbs0_RT[12]*gibbs0_RT[20] * C0;
  kr[95] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[10]*rcp_gibbs0_RT[12];
  kr[96] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[11]*rcp_gibbs0_RT[12];
  kr[97] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[12]*rcp_gibbs0_RT[13];
  kr[98] = gibbs0_RT[1]*rcp_gibbs0_RT[4]*rcp_gibbs0_RT[14]*gibbs0_RT[15];
  kr[99] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[14]*rcp_gibbs0_RT[16];
  kr[100] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[16]*rcp_gibbs0_RT[17];
  kr[101] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[17]*rcp_gibbs0_RT[18];
  kr[102] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[17]*rcp_gibbs0_RT[19];
  kr[103] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[18]*rcp_gibbs0_RT[20];
  kr[104] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[19]*rcp_gibbs0_RT[20];
  kr[105] = gibbs0_RT[1]*rcp_gibbs0_RT[4]*rcp_gibbs0_RT[21]*gibbs0_RT[27];
  kr[106] = gibbs0_RT[1]*rcp_gibbs0_RT[4]*rcp_gibbs0_RT[22]*gibbs0_RT[28];
  kr[107] = gibbs0_RT[1]*rcp_gibbs0_RT[4]*rcp_gibbs0_RT[22]*gibbs0_RT[29];
  kr[108] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[21]*rcp_gibbs0_RT[22];
  kr[109] = rcp_gibbs0_RT[4]*gibbs0_RT[12]*gibbs0_RT[14]*rcp_gibbs0_RT[22];
  kr[110] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[22]*rcp_gibbs0_RT[23];
  kr[111] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[23]*rcp_gibbs0_RT[24];
  kr[112] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[25]*rcp_gibbs0_RT[26];
  kr[113] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[27]*rcp_gibbs0_RT[28];
  kr[114] = gibbs0_RT[3]*rcp_gibbs0_RT[6]*rcp_gibbs0_RT[6]*gibbs0_RT[7];
  kr[115] = gibbs0_RT[3]*rcp_gibbs0_RT[6]*rcp_gibbs0_RT[6]*gibbs0_RT[7];
  kr[116] = gibbs0_RT[4]*rcp_gibbs0_RT[6]*rcp_gibbs0_RT[10]*gibbs0_RT[17];
  kr[117] = gibbs0_RT[3]*rcp_gibbs0_RT[6]*rcp_gibbs0_RT[12]*gibbs0_RT[13];
  kr[118] = gibbs0_RT[4]*rcp_gibbs0_RT[6]*rcp_gibbs0_RT[12]*gibbs0_RT[19];
  kr[119] = gibbs0_RT[4]*rcp_gibbs0_RT[6]*rcp_gibbs0_RT[14]*gibbs0_RT[15];
  kr[120] = rcp_gibbs0_RT[6]*gibbs0_RT[7]*gibbs0_RT[16]*rcp_gibbs0_RT[17];
  kr[121] = gibbs0_RT[2]*rcp_gibbs0_RT[3]*rcp_gibbs0_RT[8]*gibbs0_RT[14];
  kr[122] = gibbs0_RT[1]*rcp_gibbs0_RT[8]*rcp_gibbs0_RT[10]*gibbs0_RT[21];
  kr[123] = gibbs0_RT[1]*rcp_gibbs0_RT[8]*rcp_gibbs0_RT[12]*gibbs0_RT[22];
  kr[124] = gibbs0_RT[2]*rcp_gibbs0_RT[3]*rcp_gibbs0_RT[9]*gibbs0_RT[16];
  kr[125] = rcp_gibbs0_RT[0]*gibbs0_RT[1]*rcp_gibbs0_RT[9]*gibbs0_RT[10];
  kr[126] = gibbs0_RT[1]*rcp_gibbs0_RT[5]*rcp_gibbs0_RT[9]*gibbs0_RT[17];
  kr[127] = gibbs0_RT[1]*rcp_gibbs0_RT[9]*rcp_gibbs0_RT[10]*gibbs0_RT[22];
  kr[128] = gibbs0_RT[1]*rcp_gibbs0_RT[9]*rcp_gibbs0_RT[12]*gibbs0_RT[23];
  kr[129] = gibbs0_RT[1]*rcp_gibbs0_RT[9]*rcp_gibbs0_RT[13]*gibbs0_RT[24];
  kr[130] = rcp_gibbs0_RT[9]*rcp_gibbs0_RT[14]*gibbs0_RT[27] * C0;
  kr[131] = rcp_gibbs0_RT[9]*gibbs0_RT[14]*rcp_gibbs0_RT[15]*gibbs0_RT[16];
  kr[132] = gibbs0_RT[1]*rcp_gibbs0_RT[9]*rcp_gibbs0_RT[17]*gibbs0_RT[28];
  kr[133] = rcp_gibbs0_RT[9]*gibbs0_RT[14]*gibbs0_RT[22]*rcp_gibbs0_RT[27];
  kr[134] = rcp_gibbs0_RT[0]*gibbs0_RT[1]*rcp_gibbs0_RT[10]*gibbs0_RT[12];
  kr[135] = gibbs0_RT[0]*rcp_gibbs0_RT[10]*rcp_gibbs0_RT[10]*gibbs0_RT[22];
  kr[136] = gibbs0_RT[1]*rcp_gibbs0_RT[10]*rcp_gibbs0_RT[12]*gibbs0_RT[24];
  kr[137] = rcp_gibbs0_RT[10]*gibbs0_RT[12]*gibbs0_RT[12]*rcp_gibbs0_RT[13];
  kr[138] = rcp_gibbs0_RT[10]*rcp_gibbs0_RT[14]*gibbs0_RT[28] * C0;
  kr[139] = rcp_gibbs0_RT[10]*gibbs0_RT[14]*gibbs0_RT[23]*rcp_gibbs0_RT[27];
  kr[140] = gibbs0_RT[10]*rcp_gibbs0_RT[11];
  kr[141] = gibbs0_RT[10]*rcp_gibbs0_RT[11];
  kr[142] = gibbs0_RT[1]*rcp_gibbs0_RT[3]*gibbs0_RT[4]*rcp_gibbs0_RT[11]*gibbs0_RT[14] * rcpC0;
  kr[143] = rcp_gibbs0_RT[3]*gibbs0_RT[5]*rcp_gibbs0_RT[11]*gibbs0_RT[14];
  kr[144] = rcp_gibbs0_RT[0]*gibbs0_RT[1]*rcp_gibbs0_RT[11]*gibbs0_RT[12];
  kr[145] = rcp_gibbs0_RT[5]*rcp_gibbs0_RT[11]*gibbs0_RT[20] * C0;
  kr[146] = gibbs0_RT[10]*rcp_gibbs0_RT[11];
  kr[147] = gibbs0_RT[1]*rcp_gibbs0_RT[11]*rcp_gibbs0_RT[12]*gibbs0_RT[24];
  kr[148] = rcp_gibbs0_RT[11]*gibbs0_RT[12]*gibbs0_RT[12]*rcp_gibbs0_RT[13];
  kr[149] = gibbs0_RT[10]*rcp_gibbs0_RT[11];
  kr[150] = gibbs0_RT[10]*rcp_gibbs0_RT[11];
  kr[151] = rcp_gibbs0_RT[11]*gibbs0_RT[14]*rcp_gibbs0_RT[15]*gibbs0_RT[17];
  kr[152] = rcp_gibbs0_RT[11]*gibbs0_RT[12]*gibbs0_RT[25]*rcp_gibbs0_RT[26];
  kr[153] = gibbs0_RT[2]*rcp_gibbs0_RT[3]*rcp_gibbs0_RT[12]*gibbs0_RT[19];
  kr[154] = rcp_gibbs0_RT[3]*gibbs0_RT[4]*rcp_gibbs0_RT[12]*gibbs0_RT[17];
  kr[155] = gibbs0_RT[6]*rcp_gibbs0_RT[7]*rcp_gibbs0_RT[12]*gibbs0_RT[13];
  kr[156] = rcp_gibbs0_RT[12]*rcp_gibbs0_RT[12]*gibbs0_RT[26] * C0;
  kr[157] = gibbs0_RT[1]*rcp_gibbs0_RT[12]*rcp_gibbs0_RT[12]*gibbs0_RT[25];
  kr[158] = rcp_gibbs0_RT[12]*gibbs0_RT[13]*gibbs0_RT[14]*rcp_gibbs0_RT[16];
  kr[159] = rcp_gibbs0_RT[12]*gibbs0_RT[13]*gibbs0_RT[16]*rcp_gibbs0_RT[17];
  kr[160] = rcp_gibbs0_RT[12]*gibbs0_RT[13]*gibbs0_RT[18]*rcp_gibbs0_RT[20];
  kr[161] = rcp_gibbs0_RT[12]*gibbs0_RT[13]*gibbs0_RT[19]*rcp_gibbs0_RT[20];
  kr[162] = rcp_gibbs0_RT[12]*gibbs0_RT[13]*gibbs0_RT[23]*rcp_gibbs0_RT[24];
  kr[163] = rcp_gibbs0_RT[12]*gibbs0_RT[13]*gibbs0_RT[25]*rcp_gibbs0_RT[26];
  kr[164] = gibbs0_RT[1]*gibbs0_RT[14]*rcp_gibbs0_RT[16] * rcpC0;
  kr[165] = gibbs0_RT[1]*gibbs0_RT[14]*rcp_gibbs0_RT[16] * rcpC0;
  kr[166] = rcp_gibbs0_RT[3]*gibbs0_RT[6]*gibbs0_RT[14]*rcp_gibbs0_RT[16];
  kr[167] = rcp_gibbs0_RT[3]*gibbs0_RT[6]*gibbs0_RT[17]*rcp_gibbs0_RT[18];
  kr[168] = rcp_gibbs0_RT[3]*gibbs0_RT[6]*gibbs0_RT[17]*rcp_gibbs0_RT[19];
  kr[169] = rcp_gibbs0_RT[3]*gibbs0_RT[14]*gibbs0_RT[16]*rcp_gibbs0_RT[21];
  kr[170] = rcp_gibbs0_RT[0]*gibbs0_RT[1]*rcp_gibbs0_RT[21]*gibbs0_RT[22];
  kr[171] = rcp_gibbs0_RT[3]*gibbs0_RT[16]*gibbs0_RT[17]*rcp_gibbs0_RT[23];
  kr[172] = gibbs0_RT[0]*gibbs0_RT[22]*rcp_gibbs0_RT[24] * rcpC0;
  kr[173] = rcp_gibbs0_RT[3]*gibbs0_RT[6]*gibbs0_RT[24]*rcp_gibbs0_RT[25];
  kr[174] = rcp_gibbs0_RT[3]*gibbs0_RT[4]*gibbs0_RT[14]*gibbs0_RT[14]*rcp_gibbs0_RT[27] * rcpC0;
  kr[175] = gibbs0_RT[14]*gibbs0_RT[14]*gibbs0_RT[22]*rcp_gibbs0_RT[27]*rcp_gibbs0_RT[27] * rcpC0;
  kr[176] = gibbs0_RT[2]*rcp_gibbs0_RT[29]*rcp_gibbs0_RT[34]*gibbs0_RT[44];
  kr[177] = gibbs0_RT[2]*rcp_gibbs0_RT[3]*rcp_gibbs0_RT[29]*gibbs0_RT[35];
  kr[178] = gibbs0_RT[1]*rcp_gibbs0_RT[4]*rcp_gibbs0_RT[29]*gibbs0_RT[35];
  kr[179] = rcp_gibbs0_RT[2]*gibbs0_RT[3]*rcp_gibbs0_RT[36]*gibbs0_RT[44];
  kr[180] = rcp_gibbs0_RT[2]*gibbs0_RT[35]*gibbs0_RT[35]*rcp_gibbs0_RT[36];
  kr[181] = rcp_gibbs0_RT[1]*gibbs0_RT[4]*rcp_gibbs0_RT[36]*gibbs0_RT[44];
  kr[182] = rcp_gibbs0_RT[4]*gibbs0_RT[6]*rcp_gibbs0_RT[36]*gibbs0_RT[44];
  kr[183] = gibbs0_RT[2]*rcp_gibbs0_RT[36]*gibbs0_RT[44] * rcpC0;
  kr[184] = gibbs0_RT[4]*rcp_gibbs0_RT[6]*rcp_gibbs0_RT[34]*gibbs0_RT[36];
  kr[185] = rcp_gibbs0_RT[2]*rcp_gibbs0_RT[34]*gibbs0_RT[36] * C0;
  kr[186] = rcp_gibbs0_RT[2]*gibbs0_RT[3]*gibbs0_RT[35]*rcp_gibbs0_RT[35];
  kr[187] = rcp_gibbs0_RT[1]*gibbs0_RT[4]*gibbs0_RT[35]*rcp_gibbs0_RT[35];
  kr[188] = gibbs0_RT[1]*rcp_gibbs0_RT[2]*rcp_gibbs0_RT[30]*gibbs0_RT[35];
  kr[189] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[30]*rcp_gibbs0_RT[30];
  kr[190] = gibbs0_RT[1]*rcp_gibbs0_RT[4]*rcp_gibbs0_RT[30]*gibbs0_RT[38];
  kr[191] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[30]*rcp_gibbs0_RT[30];
  kr[192] = gibbs0_RT[2]*rcp_gibbs0_RT[3]*rcp_gibbs0_RT[30]*gibbs0_RT[38];
  kr[193] = rcp_gibbs0_RT[3]*gibbs0_RT[4]*rcp_gibbs0_RT[30]*gibbs0_RT[35];
  kr[194] = gibbs0_RT[1]*rcp_gibbs0_RT[29]*rcp_gibbs0_RT[30]*gibbs0_RT[44];
  kr[195] = gibbs0_RT[0]*rcp_gibbs0_RT[5]*rcp_gibbs0_RT[30]*gibbs0_RT[38];
  kr[196] = gibbs0_RT[4]*rcp_gibbs0_RT[30]*rcp_gibbs0_RT[34]*gibbs0_RT[44];
  kr[197] = gibbs0_RT[1]*rcp_gibbs0_RT[30]*rcp_gibbs0_RT[34]*gibbs0_RT[37];
  kr[198] = rcp_gibbs0_RT[2]*gibbs0_RT[4]*gibbs0_RT[31]*rcp_gibbs0_RT[31];
  kr[199] = gibbs0_RT[1]*rcp_gibbs0_RT[2]*rcp_gibbs0_RT[31]*gibbs0_RT[38];
  kr[200] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[31]*rcp_gibbs0_RT[31];
  kr[201] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[31]*rcp_gibbs0_RT[31];
  kr[202] = gibbs0_RT[1]*rcp_gibbs0_RT[33]*gibbs0_RT[44] * rcpC0;
  kr[203] = gibbs0_RT[1]*rcp_gibbs0_RT[33]*gibbs0_RT[44] * rcpC0;
  kr[204] = rcp_gibbs0_RT[3]*gibbs0_RT[6]*rcp_gibbs0_RT[33]*gibbs0_RT[44];
  kr[205] = rcp_gibbs0_RT[2]*gibbs0_RT[4]*rcp_gibbs0_RT[33]*gibbs0_RT[44];
  kr[206] = rcp_gibbs0_RT[2]*gibbs0_RT[31]*rcp_gibbs0_RT[33]*gibbs0_RT[35];
  kr[207] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*rcp_gibbs0_RT[33]*gibbs0_RT[44];
  kr[208] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*rcp_gibbs0_RT[33]*gibbs0_RT[44];
  kr[209] = rcp_gibbs0_RT[12]*gibbs0_RT[13]*rcp_gibbs0_RT[33]*gibbs0_RT[44];
  kr[210] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[34]*gibbs0_RT[38] * C0;
  kr[211] = rcp_gibbs0_RT[2]*gibbs0_RT[4]*gibbs0_RT[35]*rcp_gibbs0_RT[37];
  kr[212] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[35]*rcp_gibbs0_RT[37];
  kr[213] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[35]*rcp_gibbs0_RT[37];
  kr[214] = rcp_gibbs0_RT[3]*gibbs0_RT[6]*gibbs0_RT[35]*rcp_gibbs0_RT[37];
  kr[215] = rcp_gibbs0_RT[2]*gibbs0_RT[14]*gibbs0_RT[30]*rcp_gibbs0_RT[38];
  kr[216] = gibbs0_RT[1]*rcp_gibbs0_RT[4]*rcp_gibbs0_RT[38]*gibbs0_RT[43];
  kr[217] = gibbs0_RT[4]*rcp_gibbs0_RT[5]*rcp_gibbs0_RT[38]*gibbs0_RT[40];
  kr[218] = gibbs0_RT[2]*rcp_gibbs0_RT[3]*rcp_gibbs0_RT[38]*gibbs0_RT[43];
  kr[219] = rcp_gibbs0_RT[0]*gibbs0_RT[1]*rcp_gibbs0_RT[38]*gibbs0_RT[40];
  kr[220] = rcp_gibbs0_RT[2]*gibbs0_RT[14]*gibbs0_RT[35]*rcp_gibbs0_RT[43];
  kr[221] = rcp_gibbs0_RT[1]*gibbs0_RT[14]*gibbs0_RT[31]*rcp_gibbs0_RT[43];
  kr[222] = gibbs0_RT[1]*rcp_gibbs0_RT[4]*gibbs0_RT[14]*gibbs0_RT[35]*rcp_gibbs0_RT[43] * rcpC0;
  kr[223] = gibbs0_RT[14]*rcp_gibbs0_RT[29]*rcp_gibbs0_RT[43]*gibbs0_RT[44];
  kr[224] = rcp_gibbs0_RT[3]*gibbs0_RT[15]*gibbs0_RT[35]*rcp_gibbs0_RT[43];
  kr[225] = gibbs0_RT[14]*gibbs0_RT[30]*rcp_gibbs0_RT[43] * rcpC0;
  kr[226] = gibbs0_RT[14]*rcp_gibbs0_RT[34]*gibbs0_RT[37]*rcp_gibbs0_RT[43];
  kr[227] = gibbs0_RT[15]*rcp_gibbs0_RT[34]*rcp_gibbs0_RT[43]*gibbs0_RT[44];
  kr[228] = gibbs0_RT[1]*gibbs0_RT[39]*rcp_gibbs0_RT[39] * rcpC0;
  kr[229] = gibbs0_RT[1]*rcp_gibbs0_RT[2]*rcp_gibbs0_RT[39]*gibbs0_RT[43];
  kr[230] = rcp_gibbs0_RT[2]*gibbs0_RT[14]*gibbs0_RT[31]*rcp_gibbs0_RT[39];
  kr[231] = rcp_gibbs0_RT[2]*gibbs0_RT[4]*gibbs0_RT[39]*rcp_gibbs0_RT[39];
  kr[232] = gibbs0_RT[1]*rcp_gibbs0_RT[4]*rcp_gibbs0_RT[39]*gibbs0_RT[50];
  kr[233] = gibbs0_RT[1]*rcp_gibbs0_RT[4]*rcp_gibbs0_RT[39]*gibbs0_RT[52];
  kr[234] = rcp_gibbs0_RT[4]*gibbs0_RT[14]*gibbs0_RT[32]*rcp_gibbs0_RT[39];
  kr[235] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[39]*gibbs0_RT[41] * C0;
  kr[236] = gibbs0_RT[10]*rcp_gibbs0_RT[29]*(1./gibbs0_RT[41])*gibbs0_RT[44];
  kr[237] = rcp_gibbs0_RT[8]*gibbs0_RT[30]*gibbs0_RT[39]*rcp_gibbs0_RT[44];
  kr[238] = rcp_gibbs0_RT[9]*gibbs0_RT[30]*gibbs0_RT[40]*rcp_gibbs0_RT[44];
  kr[239] = rcp_gibbs0_RT[9]*gibbs0_RT[42]*rcp_gibbs0_RT[44] * C0;
  kr[240] = rcp_gibbs0_RT[10]*gibbs0_RT[31]*gibbs0_RT[40]*rcp_gibbs0_RT[44];
  kr[241] = rcp_gibbs0_RT[11]*gibbs0_RT[31]*gibbs0_RT[40]*rcp_gibbs0_RT[44];
  kr[242] = gibbs0_RT[2]*rcp_gibbs0_RT[8]*rcp_gibbs0_RT[34]*gibbs0_RT[39];
  kr[243] = rcp_gibbs0_RT[8]*gibbs0_RT[14]*gibbs0_RT[30]*rcp_gibbs0_RT[34];
  kr[244] = gibbs0_RT[2]*rcp_gibbs0_RT[9]*rcp_gibbs0_RT[34]*gibbs0_RT[40];
  kr[245] = gibbs0_RT[1]*rcp_gibbs0_RT[9]*rcp_gibbs0_RT[34]*gibbs0_RT[43];
  kr[246] = rcp_gibbs0_RT[9]*gibbs0_RT[16]*gibbs0_RT[30]*rcp_gibbs0_RT[34];
  kr[247] = gibbs0_RT[1]*rcp_gibbs0_RT[10]*rcp_gibbs0_RT[34]*gibbs0_RT[52];
  kr[248] = gibbs0_RT[4]*rcp_gibbs0_RT[10]*rcp_gibbs0_RT[34]*gibbs0_RT[40];
  kr[249] = gibbs0_RT[1]*rcp_gibbs0_RT[10]*rcp_gibbs0_RT[34]*gibbs0_RT[51];
  kr[250] = gibbs0_RT[1]*rcp_gibbs0_RT[11]*rcp_gibbs0_RT[34]*gibbs0_RT[52];
  kr[251] = gibbs0_RT[4]*rcp_gibbs0_RT[11]*rcp_gibbs0_RT[34]*gibbs0_RT[40];
  kr[252] = gibbs0_RT[1]*rcp_gibbs0_RT[11]*rcp_gibbs0_RT[34]*gibbs0_RT[51];
  kr[253] = gibbs0_RT[5]*rcp_gibbs0_RT[12]*rcp_gibbs0_RT[34]*gibbs0_RT[40];
  kr[254] = gibbs0_RT[4]*rcp_gibbs0_RT[12]*rcp_gibbs0_RT[34]*gibbs0_RT[41];
  kr[255] = gibbs0_RT[1]*rcp_gibbs0_RT[2]*gibbs0_RT[14]*rcp_gibbs0_RT[40]*gibbs0_RT[44] * rcpC0;
  kr[256] = rcp_gibbs0_RT[2]*gibbs0_RT[35]*gibbs0_RT[40]*rcp_gibbs0_RT[40];
  kr[257] = gibbs0_RT[2]*rcp_gibbs0_RT[3]*gibbs0_RT[16]*rcp_gibbs0_RT[40]*gibbs0_RT[44] * rcpC0;
  kr[258] = gibbs0_RT[1]*rcp_gibbs0_RT[4]*gibbs0_RT[16]*rcp_gibbs0_RT[40]*gibbs0_RT[44] * rcpC0;
  kr[259] = rcp_gibbs0_RT[1]*gibbs0_RT[10]*rcp_gibbs0_RT[40]*gibbs0_RT[44];
  kr[260] = rcp_gibbs0_RT[2]*gibbs0_RT[15]*gibbs0_RT[31]*rcp_gibbs0_RT[42];
  kr[261] = rcp_gibbs0_RT[2]*gibbs0_RT[14]*gibbs0_RT[38]*rcp_gibbs0_RT[42];
  kr[262] = rcp_gibbs0_RT[2]*gibbs0_RT[4]*rcp_gibbs0_RT[42]*gibbs0_RT[43];
  kr[263] = rcp_gibbs0_RT[1]*gibbs0_RT[14]*gibbs0_RT[32]*rcp_gibbs0_RT[42];
  kr[264] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*rcp_gibbs0_RT[42]*gibbs0_RT[43];
  kr[265] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*rcp_gibbs0_RT[42]*gibbs0_RT[43];
  kr[266] = rcp_gibbs0_RT[4]*gibbs0_RT[15]*gibbs0_RT[32]*rcp_gibbs0_RT[42];
  kr[267] = gibbs0_RT[14]*gibbs0_RT[31]*rcp_gibbs0_RT[42] * rcpC0;
  kr[268] = rcp_gibbs0_RT[41]*gibbs0_RT[52];
  kr[269] = rcp_gibbs0_RT[1]*gibbs0_RT[4]*gibbs0_RT[40]*rcp_gibbs0_RT[41];
  kr[270] = rcp_gibbs0_RT[1]*gibbs0_RT[14]*gibbs0_RT[32]*rcp_gibbs0_RT[41];
  kr[271] = (1./gibbs0_RT[50])*gibbs0_RT[52];
  kr[272] = gibbs0_RT[14]*rcp_gibbs0_RT[27]*rcp_gibbs0_RT[34]*gibbs0_RT[51];
  kr[273] = gibbs0_RT[1]*rcp_gibbs0_RT[12]*rcp_gibbs0_RT[29]*gibbs0_RT[41];
  kr[274] = gibbs0_RT[0]*rcp_gibbs0_RT[12]*rcp_gibbs0_RT[29]*gibbs0_RT[40];
  kr[275] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[32]*rcp_gibbs0_RT[32];
  kr[276] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[32]*rcp_gibbs0_RT[32];
  kr[277] = rcp_gibbs0_RT[2]*gibbs0_RT[4]*gibbs0_RT[32]*rcp_gibbs0_RT[32];
  kr[278] = gibbs0_RT[14]*rcp_gibbs0_RT[15]*rcp_gibbs0_RT[30]*gibbs0_RT[38];
  kr[279] = gibbs0_RT[35]*rcp_gibbs0_RT[35]*rcp_gibbs0_RT[38]*gibbs0_RT[43];
  kr[280] = gibbs0_RT[15]*rcp_gibbs0_RT[35]*gibbs0_RT[37]*rcp_gibbs0_RT[43];
  kr[281] = gibbs0_RT[14]*rcp_gibbs0_RT[15]*rcp_gibbs0_RT[29]*gibbs0_RT[35];
  kr[282] = gibbs0_RT[1]*rcp_gibbs0_RT[2]*rcp_gibbs0_RT[24]*gibbs0_RT[47];
  kr[283] = gibbs0_RT[1]*rcp_gibbs0_RT[2]*rcp_gibbs0_RT[25]*gibbs0_RT[48];
  kr[284] = gibbs0_RT[3]*rcp_gibbs0_RT[4]*gibbs0_RT[5]*rcp_gibbs0_RT[6];
  kr[285] = rcp_gibbs0_RT[0]*rcp_gibbs0_RT[9]*gibbs0_RT[12] * C0;
  kr[286] = gibbs0_RT[2]*rcp_gibbs0_RT[3]*rcp_gibbs0_RT[10]*gibbs0_RT[17];
  kr[287] = gibbs0_RT[2]*rcp_gibbs0_RT[3]*rcp_gibbs0_RT[23]*gibbs0_RT[47];
  kr[288] = rcp_gibbs0_RT[3]*gibbs0_RT[6]*gibbs0_RT[22]*rcp_gibbs0_RT[23];
  kr[289] = rcp_gibbs0_RT[2]*gibbs0_RT[4]*gibbs0_RT[47]*rcp_gibbs0_RT[48];
  kr[290] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[47]*rcp_gibbs0_RT[48];
  kr[291] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[28]*gibbs0_RT[47] * C0;
  kr[292] = rcp_gibbs0_RT[1]*gibbs0_RT[12]*gibbs0_RT[16]*rcp_gibbs0_RT[47];
  kr[293] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[28]*rcp_gibbs0_RT[47];
  kr[294] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[28]*rcp_gibbs0_RT[47];
  kr[295] = rcp_gibbs0_RT[4]*gibbs0_RT[16]*gibbs0_RT[18]*rcp_gibbs0_RT[47];
  kr[296] = rcp_gibbs0_RT[12]*rcp_gibbs0_RT[25]*gibbs0_RT[46] * C0;
  kr[297] = rcp_gibbs0_RT[2]*gibbs0_RT[4]*gibbs0_RT[45]*rcp_gibbs0_RT[46];
  kr[298] = gibbs0_RT[0]*rcp_gibbs0_RT[1]*gibbs0_RT[45]*rcp_gibbs0_RT[46];
  kr[299] = rcp_gibbs0_RT[4]*gibbs0_RT[5]*gibbs0_RT[45]*rcp_gibbs0_RT[46];
  kr[300] = gibbs0_RT[6]*rcp_gibbs0_RT[7]*rcp_gibbs0_RT[45]*gibbs0_RT[46];
  kr[301] = rcp_gibbs0_RT[12]*gibbs0_RT[13]*gibbs0_RT[45]*rcp_gibbs0_RT[46];
  kr[302] = rcp_gibbs0_RT[12]*rcp_gibbs0_RT[24]*gibbs0_RT[45] * C0;
  kr[303] = rcp_gibbs0_RT[2]*gibbs0_RT[17]*gibbs0_RT[25]*rcp_gibbs0_RT[45];
  kr[304] = rcp_gibbs0_RT[1]*rcp_gibbs0_RT[45]*gibbs0_RT[46] * C0;
  kr[305] = rcp_gibbs0_RT[1]*gibbs0_RT[12]*gibbs0_RT[25]*rcp_gibbs0_RT[45];
  kr[306] = rcp_gibbs0_RT[4]*gibbs0_RT[18]*gibbs0_RT[25]*rcp_gibbs0_RT[45];
  kr[307] = gibbs0_RT[3]*rcp_gibbs0_RT[6]*rcp_gibbs0_RT[45]*gibbs0_RT[46];
  kr[308] = rcp_gibbs0_RT[12]*gibbs0_RT[25]*gibbs0_RT[25]*rcp_gibbs0_RT[45];

  // Compute the reaction rates
  cfloat cR;
  //1: 2 O + M <=> O2 + M
  cR = kf[330]*(Ci[2]*Ci[2]-kr[0]*Ci[3]);
#ifdef DEBUG
  printf("1: %+.15e\n", cR);
#endif
  wdot[2] += -2*cR;
  wdot[3] += cR;

  //2: O + H + M <=> OH + M
  cR = kf[331]*(Ci[1]*Ci[2]-kr[1]*Ci[4]);
#ifdef DEBUG
  printf("2: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[2] += -cR;
  wdot[4] += cR;

  //3: O + H2 <=> H + OH
  cR = kf[0]*(Ci[0]*Ci[2]-kr[2]*Ci[1]*Ci[4]);
#ifdef DEBUG
  printf("3: %+.15e\n", cR);
#endif
  wdot[0] += -cR;
  wdot[1] += cR;
  wdot[2] += -cR;
  wdot[4] += cR;

  //4: O + HO2 <=> OH + O2
  cR = kf[228]*(Ci[2]*Ci[6]-kr[3]*Ci[3]*Ci[4]);
#ifdef DEBUG
  printf("4: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[3] += cR;
  wdot[4] += cR;
  wdot[6] += -cR;

  //5: O + H2O2 <=> OH + HO2
  cR = kf[1]*(Ci[2]*Ci[7]-kr[4]*Ci[4]*Ci[6]);
#ifdef DEBUG
  printf("5: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[6] += cR;
  wdot[7] += -cR;

  //6: O + CH <=> H + CO
  cR = kf[229]*(Ci[2]*Ci[9]-kr[5]*Ci[1]*Ci[14]);
#ifdef DEBUG
  printf("6: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[2] += -cR;
  wdot[9] += -cR;
  wdot[14] += cR;

  //7: O + CH2 <=> H + HCO
  cR = kf[230]*(Ci[2]*Ci[10]-kr[6]*Ci[1]*Ci[16]);
#ifdef DEBUG
  printf("7: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[2] += -cR;
  wdot[10] += -cR;
  wdot[16] += cR;

  //8: O + CH2(S) <=> H2 + CO
  cR = kf[231]*(Ci[2]*Ci[11]-kr[7]*Ci[0]*Ci[14]);
#ifdef DEBUG
  printf("8: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[2] += -cR;
  wdot[11] += -cR;
  wdot[14] += cR;

  //9: O + CH2(S) <=> H + HCO
  cR = kf[232]*(Ci[2]*Ci[11]-kr[8]*Ci[1]*Ci[16]);
#ifdef DEBUG
  printf("9: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[2] += -cR;
  wdot[11] += -cR;
  wdot[16] += cR;

  //10: O + CH3 <=> H + CH2O
  cR = kf[233]*(Ci[2]*Ci[12]-kr[9]*Ci[1]*Ci[17]);
#ifdef DEBUG
  printf("10: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[2] += -cR;
  wdot[12] += -cR;
  wdot[17] += cR;

  //11: O + CH4 <=> OH + CH3
  cR = kf[2]*(Ci[2]*Ci[13]-kr[10]*Ci[4]*Ci[12]);
#ifdef DEBUG
  printf("11: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[12] += cR;
  wdot[13] += -cR;

  //12: O + CO (+M) <=> CO2 (+M)
  cR = kf[4]*(Ci[2]*Ci[14]-kr[11]*Ci[15]);
#ifdef DEBUG
  printf("12: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[14] += -cR;
  wdot[15] += cR;

  //13: O + HCO <=> OH + CO
  cR = kf[234]*(Ci[2]*Ci[16]-kr[12]*Ci[4]*Ci[14]);
#ifdef DEBUG
  printf("13: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[14] += cR;
  wdot[16] += -cR;

  //14: O + HCO <=> H + CO2
  cR = kf[235]*(Ci[2]*Ci[16]-kr[13]*Ci[1]*Ci[15]);
#ifdef DEBUG
  printf("14: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[2] += -cR;
  wdot[15] += cR;
  wdot[16] += -cR;

  //15: O + CH2O <=> OH + HCO
  cR = kf[5]*(Ci[2]*Ci[17]-kr[14]*Ci[4]*Ci[16]);
#ifdef DEBUG
  printf("15: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[16] += cR;
  wdot[17] += -cR;

  //16: O + CH2OH <=> OH + CH2O
  cR = kf[236]*(Ci[2]*Ci[18]-kr[15]*Ci[4]*Ci[17]);
#ifdef DEBUG
  printf("16: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[17] += cR;
  wdot[18] += -cR;

  //17: O + CH3O <=> OH + CH2O
  cR = kf[237]*(Ci[2]*Ci[19]-kr[16]*Ci[4]*Ci[17]);
#ifdef DEBUG
  printf("17: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[17] += cR;
  wdot[19] += -cR;

  //18: O + CH3OH <=> OH + CH2OH
  cR = kf[6]*(Ci[2]*Ci[20]-kr[17]*Ci[4]*Ci[18]);
#ifdef DEBUG
  printf("18: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[18] += cR;
  wdot[20] += -cR;

  //19: O + CH3OH <=> OH + CH3O
  cR = kf[7]*(Ci[2]*Ci[20]-kr[18]*Ci[4]*Ci[19]);
#ifdef DEBUG
  printf("19: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[19] += cR;
  wdot[20] += -cR;

  //20: O + C2H <=> CH + CO
  cR = kf[238]*(Ci[2]*Ci[21]-kr[19]*Ci[9]*Ci[14]);
#ifdef DEBUG
  printf("20: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[9] += cR;
  wdot[14] += cR;
  wdot[21] += -cR;

  //21: O + C2H2 <=> H + HCCO
  cR = kf[209]*(Ci[2]*Ci[22]-kr[20]*Ci[1]*Ci[27]);
#ifdef DEBUG
  printf("21: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[2] += -cR;
  wdot[22] += -cR;
  wdot[27] += cR;

  //22: O + C2H2 <=> OH + C2H
  cR = kf[8]*(Ci[2]*Ci[22]-kr[21]*Ci[4]*Ci[21]);
#ifdef DEBUG
  printf("22: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[21] += cR;
  wdot[22] += -cR;

  //23: O + C2H2 <=> CO + CH2
  cR = kf[334]*(Ci[2]*Ci[22]-kr[22]*Ci[10]*Ci[14]);
#ifdef DEBUG
  printf("23: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[10] += cR;
  wdot[14] += cR;
  wdot[22] += -cR;

  //24: O + C2H3 <=> H + CH2CO
  cR = kf[239]*(Ci[2]*Ci[23]-kr[23]*Ci[1]*Ci[28]);
#ifdef DEBUG
  printf("24: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[2] += -cR;
  wdot[23] += -cR;
  wdot[28] += cR;

  //25: O + C2H4 <=> CH3 + HCO
  cR = kf[224]*(Ci[2]*Ci[24]-kr[24]*Ci[12]*Ci[16]);
#ifdef DEBUG
  printf("25: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[12] += cR;
  wdot[16] += cR;
  wdot[24] += -cR;

  //26: O + C2H5 <=> CH3 + CH2O
  cR = kf[240]*(Ci[2]*Ci[25]-kr[25]*Ci[12]*Ci[17]);
#ifdef DEBUG
  printf("26: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[12] += cR;
  wdot[17] += cR;
  wdot[25] += -cR;

  //27: O + C2H6 <=> OH + C2H5
  cR = kf[9]*(Ci[2]*Ci[26]-kr[26]*Ci[4]*Ci[25]);
#ifdef DEBUG
  printf("27: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[25] += cR;
  wdot[26] += -cR;

  //28: O + HCCO <=> H + 2 CO
  cR = kf[241]*(Ci[2]*Ci[27]-kr[27]*Ci[1]*Ci[14]*Ci[14]);
#ifdef DEBUG
  printf("28: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[2] += -cR;
  wdot[14] += 2*cR;
  wdot[27] += -cR;

  //29: O + CH2CO <=> OH + HCCO
  cR = kf[212]*(Ci[2]*Ci[28]-kr[28]*Ci[4]*Ci[27]);
#ifdef DEBUG
  printf("29: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[27] += cR;
  wdot[28] += -cR;

  //30: O + CH2CO <=> CH2 + CO2
  cR = kf[10]*(Ci[2]*Ci[28]-kr[29]*Ci[10]*Ci[15]);
#ifdef DEBUG
  printf("30: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[10] += cR;
  wdot[15] += cR;
  wdot[28] += -cR;

  //31: O2 + CO <=> O + CO2
  cR = kf[11]*(Ci[3]*Ci[14]-kr[30]*Ci[2]*Ci[15]);
#ifdef DEBUG
  printf("31: %+.15e\n", cR);
#endif
  wdot[2] += cR;
  wdot[3] += -cR;
  wdot[14] += -cR;
  wdot[15] += cR;

  //32: O2 + CH2O <=> HO2 + HCO
  cR = kf[12]*(Ci[3]*Ci[17]-kr[31]*Ci[6]*Ci[16]);
#ifdef DEBUG
  printf("32: %+.15e\n", cR);
#endif
  wdot[3] += -cR;
  wdot[6] += cR;
  wdot[16] += cR;
  wdot[17] += -cR;

  //33: H + O2 + M <=> HO2 + M
  cR = kf[13]*(Ci[1]*Ci[3]-kr[32]*Ci[6]);
#ifdef DEBUG
  printf("33: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[3] += -cR;
  wdot[6] += cR;

  //34: H + 2 O2 <=> HO2 + O2
  cR = kf[210]*(Ci[1]*Ci[3]*Ci[3]-kr[33]*Ci[3]*Ci[6]);
#ifdef DEBUG
  printf("34: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[3] += -cR;
  wdot[6] += cR;

  //35: H + O2 + H2O <=> HO2 + H2O
  cR = kf[14]*(Ci[1]*Ci[3]*Ci[5]-kr[34]*Ci[5]*Ci[6]);
#ifdef DEBUG
  printf("35: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[3] += -cR;
  wdot[6] += cR;

  //36: H + O2 + N2 <=> HO2 + N2
  cR = kf[335]*(Ci[1]*Ci[3]*Ci[47]-kr[35]*Ci[6]*Ci[47]);
#ifdef DEBUG
  printf("36: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[3] += -cR;
  wdot[6] += cR;

  //37: H + O2 + AR <=> HO2 + AR
  cR = kf[15]*(Ci[1]*Ci[3]*Ci[52]-kr[36]*Ci[6]*Ci[52]);
#ifdef DEBUG
  printf("37: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[3] += -cR;
  wdot[6] += cR;

  //38: H + O2 <=> O + OH
  cR = kf[16]*(Ci[1]*Ci[3]-kr[37]*Ci[2]*Ci[4]);
#ifdef DEBUG
  printf("38: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[2] += cR;
  wdot[3] += -cR;
  wdot[4] += cR;

  //39: 2 H + M <=> H2 + M
  cR = kf[332]*(Ci[1]*Ci[1]-kr[38]*Ci[0]);
#ifdef DEBUG
  printf("39: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -2*cR;

  //40: 2 H + H2 <=> 2 H2
  cR = kf[17]*(Ci[0]*Ci[1]*Ci[1]-kr[39]*Ci[0]*Ci[0]);
#ifdef DEBUG
  printf("40: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -2*cR;

  //41: 2 H + H2O <=> H2 + H2O
  cR = kf[18]*(Ci[1]*Ci[1]*Ci[5]-kr[40]*Ci[0]*Ci[5]);
#ifdef DEBUG
  printf("41: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -2*cR;

  //42: 2 H + CO2 <=> H2 + CO2
  cR = kf[328]*(Ci[1]*Ci[1]*Ci[15]-kr[41]*Ci[0]*Ci[15]);
#ifdef DEBUG
  printf("42: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -2*cR;

  //43: H + OH + M <=> H2O + M
  cR = kf[329]*(Ci[1]*Ci[4]-kr[42]*Ci[5]);
#ifdef DEBUG
  printf("43: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[4] += -cR;
  wdot[5] += cR;

  //44: H + HO2 <=> O + H2O
  cR = kf[19]*(Ci[1]*Ci[6]-kr[43]*Ci[2]*Ci[5]);
#ifdef DEBUG
  printf("44: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[2] += cR;
  wdot[5] += cR;
  wdot[6] += -cR;

  //45: H + HO2 <=> O2 + H2
  cR = kf[20]*(Ci[1]*Ci[6]-kr[44]*Ci[0]*Ci[3]);
#ifdef DEBUG
  printf("45: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[3] += cR;
  wdot[6] += -cR;

  //46: H + HO2 <=> 2 OH
  cR = kf[21]*(Ci[1]*Ci[6]-kr[45]*Ci[4]*Ci[4]);
#ifdef DEBUG
  printf("46: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[4] += 2*cR;
  wdot[6] += -cR;

  //47: H + H2O2 <=> HO2 + H2
  cR = kf[22]*(Ci[1]*Ci[7]-kr[46]*Ci[0]*Ci[6]);
#ifdef DEBUG
  printf("47: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[6] += cR;
  wdot[7] += -cR;

  //48: H + H2O2 <=> OH + H2O
  cR = kf[23]*(Ci[1]*Ci[7]-kr[47]*Ci[4]*Ci[5]);
#ifdef DEBUG
  printf("48: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[4] += cR;
  wdot[5] += cR;
  wdot[7] += -cR;

  //49: H + CH <=> C + H2
  cR = kf[242]*(Ci[1]*Ci[9]-kr[48]*Ci[0]*Ci[8]);
#ifdef DEBUG
  printf("49: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[8] += cR;
  wdot[9] += -cR;

  //50: H + CH2 (+M) <=> CH3 (+M)
  cR = kf[24]*(Ci[1]*Ci[10]-kr[49]*Ci[12]);
#ifdef DEBUG
  printf("50: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[10] += -cR;
  wdot[12] += cR;

  //51: H + CH2(S) <=> CH + H2
  cR = kf[244]*(Ci[1]*Ci[11]-kr[50]*Ci[0]*Ci[9]);
#ifdef DEBUG
  printf("51: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[9] += cR;
  wdot[11] += -cR;

  //52: H + CH3 (+M) <=> CH4 (+M)
  cR = kf[26]*(Ci[1]*Ci[12]-kr[51]*Ci[13]);
#ifdef DEBUG
  printf("52: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[12] += -cR;
  wdot[13] += cR;

  //53: H + CH4 <=> CH3 + H2
  cR = kf[27]*(Ci[1]*Ci[13]-kr[52]*Ci[0]*Ci[12]);
#ifdef DEBUG
  printf("53: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[12] += cR;
  wdot[13] += -cR;

  //54: H + HCO (+M) <=> CH2O (+M)
  cR = kf[29]*(Ci[1]*Ci[16]-kr[53]*Ci[17]);
#ifdef DEBUG
  printf("54: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[16] += -cR;
  wdot[17] += cR;

  //55: H + HCO <=> H2 + CO
  cR = kf[245]*(Ci[1]*Ci[16]-kr[54]*Ci[0]*Ci[14]);
#ifdef DEBUG
  printf("55: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[14] += cR;
  wdot[16] += -cR;

  //56: H + CH2O (+M) <=> CH2OH (+M)
  cR = kf[31]*(Ci[1]*Ci[17]-kr[55]*Ci[18]);
#ifdef DEBUG
  printf("56: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[17] += -cR;
  wdot[18] += cR;

  //57: H + CH2O (+M) <=> CH3O (+M)
  cR = kf[33]*(Ci[1]*Ci[17]-kr[56]*Ci[19]);
#ifdef DEBUG
  printf("57: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[17] += -cR;
  wdot[19] += cR;

  //58: H + CH2O <=> HCO + H2
  cR = kf[34]*(Ci[1]*Ci[17]-kr[57]*Ci[0]*Ci[16]);
#ifdef DEBUG
  printf("58: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[16] += cR;
  wdot[17] += -cR;

  //59: H + CH2OH (+M) <=> CH3OH (+M)
  cR = kf[36]*(Ci[1]*Ci[18]-kr[58]*Ci[20]);
#ifdef DEBUG
  printf("59: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[18] += -cR;
  wdot[20] += cR;

  //60: H + CH2OH <=> H2 + CH2O
  cR = kf[246]*(Ci[1]*Ci[18]-kr[59]*Ci[0]*Ci[17]);
#ifdef DEBUG
  printf("60: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[17] += cR;
  wdot[18] += -cR;

  //61: H + CH2OH <=> OH + CH3
  cR = kf[37]*(Ci[1]*Ci[18]-kr[60]*Ci[4]*Ci[12]);
#ifdef DEBUG
  printf("61: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[4] += cR;
  wdot[12] += cR;
  wdot[18] += -cR;

  //62: H + CH2OH <=> CH2(S) + H2O
  cR = kf[38]*(Ci[1]*Ci[18]-kr[61]*Ci[5]*Ci[11]);
#ifdef DEBUG
  printf("62: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[5] += cR;
  wdot[11] += cR;
  wdot[18] += -cR;

  //63: H + CH3O (+M) <=> CH3OH (+M)
  cR = kf[40]*(Ci[1]*Ci[19]-kr[62]*Ci[20]);
#ifdef DEBUG
  printf("63: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[19] += -cR;
  wdot[20] += cR;

  //64: H + CH3O <=> H + CH2OH
  cR = kf[41]*(Ci[1]*Ci[19]-kr[63]*Ci[1]*Ci[18]);
#ifdef DEBUG
  printf("64: %+.15e\n", cR);
#endif
  wdot[18] += cR;
  wdot[19] += -cR;

  //65: H + CH3O <=> H2 + CH2O
  cR = kf[247]*(Ci[1]*Ci[19]-kr[64]*Ci[0]*Ci[17]);
#ifdef DEBUG
  printf("65: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[17] += cR;
  wdot[19] += -cR;

  //66: H + CH3O <=> OH + CH3
  cR = kf[42]*(Ci[1]*Ci[19]-kr[65]*Ci[4]*Ci[12]);
#ifdef DEBUG
  printf("66: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[4] += cR;
  wdot[12] += cR;
  wdot[19] += -cR;

  //67: H + CH3O <=> CH2(S) + H2O
  cR = kf[43]*(Ci[1]*Ci[19]-kr[66]*Ci[5]*Ci[11]);
#ifdef DEBUG
  printf("67: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[5] += cR;
  wdot[11] += cR;
  wdot[19] += -cR;

  //68: H + CH3OH <=> CH2OH + H2
  cR = kf[211]*(Ci[1]*Ci[20]-kr[67]*Ci[0]*Ci[18]);
#ifdef DEBUG
  printf("68: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[18] += cR;
  wdot[20] += -cR;

  //69: H + CH3OH <=> CH3O + H2
  cR = kf[336]*(Ci[1]*Ci[20]-kr[68]*Ci[0]*Ci[19]);
#ifdef DEBUG
  printf("69: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[19] += cR;
  wdot[20] += -cR;

  //70: H + C2H (+M) <=> C2H2 (+M)
  cR = kf[44]*(Ci[1]*Ci[21]-kr[69]*Ci[22]);
#ifdef DEBUG
  printf("70: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[21] += -cR;
  wdot[22] += cR;

  //71: H + C2H2 (+M) <=> C2H3 (+M)
  cR = kf[46]*(Ci[1]*Ci[22]-kr[70]*Ci[23]);
#ifdef DEBUG
  printf("71: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[22] += -cR;
  wdot[23] += cR;

  //72: H + C2H3 (+M) <=> C2H4 (+M)
  cR = kf[48]*(Ci[1]*Ci[23]-kr[71]*Ci[24]);
#ifdef DEBUG
  printf("72: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[23] += -cR;
  wdot[24] += cR;

  //73: H + C2H3 <=> H2 + C2H2
  cR = kf[248]*(Ci[1]*Ci[23]-kr[72]*Ci[0]*Ci[22]);
#ifdef DEBUG
  printf("73: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[22] += cR;
  wdot[23] += -cR;

  //74: H + C2H4 (+M) <=> C2H5 (+M)
  cR = kf[50]*(Ci[1]*Ci[24]-kr[73]*Ci[25]);
#ifdef DEBUG
  printf("74: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[24] += -cR;
  wdot[25] += cR;

  //75: H + C2H4 <=> C2H3 + H2
  cR = kf[51]*(Ci[1]*Ci[24]-kr[74]*Ci[0]*Ci[23]);
#ifdef DEBUG
  printf("75: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[23] += cR;
  wdot[24] += -cR;

  //76: H + C2H5 (+M) <=> C2H6 (+M)
  cR = kf[53]*(Ci[1]*Ci[25]-kr[75]*Ci[26]);
#ifdef DEBUG
  printf("76: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[25] += -cR;
  wdot[26] += cR;

  //77: H + C2H5 <=> H2 + C2H4
  cR = kf[249]*(Ci[1]*Ci[25]-kr[76]*Ci[0]*Ci[24]);
#ifdef DEBUG
  printf("77: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[24] += cR;
  wdot[25] += -cR;

  //78: H + C2H6 <=> C2H5 + H2
  cR = kf[54]*(Ci[1]*Ci[26]-kr[77]*Ci[0]*Ci[25]);
#ifdef DEBUG
  printf("78: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[25] += cR;
  wdot[26] += -cR;

  //79: H + HCCO <=> CH2(S) + CO
  cR = kf[250]*(Ci[1]*Ci[27]-kr[78]*Ci[11]*Ci[14]);
#ifdef DEBUG
  printf("79: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[11] += cR;
  wdot[14] += cR;
  wdot[27] += -cR;

  //80: H + CH2CO <=> HCCO + H2
  cR = kf[337]*(Ci[1]*Ci[28]-kr[79]*Ci[0]*Ci[27]);
#ifdef DEBUG
  printf("80: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[27] += cR;
  wdot[28] += -cR;

  //81: H + CH2CO <=> CH3 + CO
  cR = kf[55]*(Ci[1]*Ci[28]-kr[80]*Ci[12]*Ci[14]);
#ifdef DEBUG
  printf("81: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[12] += cR;
  wdot[14] += cR;
  wdot[28] += -cR;

  //82: H + HCCOH <=> H + CH2CO
  cR = kf[251]*(Ci[1]*Ci[29]-kr[81]*Ci[1]*Ci[28]);
#ifdef DEBUG
  printf("82: %+.15e\n", cR);
#endif
  wdot[28] += cR;
  wdot[29] += -cR;

  //83: H2 + CO (+M) <=> CH2O (+M)
  cR = kf[57]*(Ci[0]*Ci[14]-kr[82]*Ci[17]);
#ifdef DEBUG
  printf("83: %+.15e\n", cR);
#endif
  wdot[0] += -cR;
  wdot[14] += -cR;
  wdot[17] += cR;

  //84: OH + H2 <=> H + H2O
  cR = kf[58]*(Ci[0]*Ci[4]-kr[83]*Ci[1]*Ci[5]);
#ifdef DEBUG
  printf("84: %+.15e\n", cR);
#endif
  wdot[0] += -cR;
  wdot[1] += cR;
  wdot[4] += -cR;
  wdot[5] += cR;

  //85: 2 OH (+M) <=> H2O2 (+M)
  cR = kf[60]*(Ci[4]*Ci[4]-kr[84]*Ci[7]);
#ifdef DEBUG
  printf("85: %+.15e\n", cR);
#endif
  wdot[4] += -2*cR;
  wdot[7] += cR;

  //86: 2 OH <=> O + H2O
  cR = kf[61]*(Ci[4]*Ci[4]-kr[85]*Ci[2]*Ci[5]);
#ifdef DEBUG
  printf("86: %+.15e\n", cR);
#endif
  wdot[2] += cR;
  wdot[4] += -2*cR;
  wdot[5] += cR;

  //87: OH + HO2 <=> O2 + H2O
  cR = kf[62]*(Ci[4]*Ci[6]-kr[86]*Ci[3]*Ci[5]);
#ifdef DEBUG
  printf("87: %+.15e\n", cR);
#endif
  wdot[3] += cR;
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[6] += -cR;

  //88: OH + H2O2 <=> HO2 + H2O
  cR = kf[63]*(Ci[4]*Ci[7]-kr[87]*Ci[5]*Ci[6]);
#ifdef DEBUG
  printf("88: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[6] += cR;
  wdot[7] += -cR;

  //89: OH + H2O2 <=> HO2 + H2O
  cR = kf[64]*(Ci[4]*Ci[7]-kr[88]*Ci[5]*Ci[6]);
#ifdef DEBUG
  printf("89: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[6] += cR;
  wdot[7] += -cR;

  //90: OH + C <=> H + CO
  cR = kf[252]*(Ci[4]*Ci[8]-kr[89]*Ci[1]*Ci[14]);
#ifdef DEBUG
  printf("90: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[4] += -cR;
  wdot[8] += -cR;
  wdot[14] += cR;

  //91: OH + CH <=> H + HCO
  cR = kf[253]*(Ci[4]*Ci[9]-kr[90]*Ci[1]*Ci[16]);
#ifdef DEBUG
  printf("91: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[4] += -cR;
  wdot[9] += -cR;
  wdot[16] += cR;

  //92: OH + CH2 <=> H + CH2O
  cR = kf[254]*(Ci[4]*Ci[10]-kr[91]*Ci[1]*Ci[17]);
#ifdef DEBUG
  printf("92: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[4] += -cR;
  wdot[10] += -cR;
  wdot[17] += cR;

  //93: OH + CH2 <=> CH + H2O
  cR = kf[65]*(Ci[4]*Ci[10]-kr[92]*Ci[5]*Ci[9]);
#ifdef DEBUG
  printf("93: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[9] += cR;
  wdot[10] += -cR;

  //94: OH + CH2(S) <=> H + CH2O
  cR = kf[255]*(Ci[4]*Ci[11]-kr[93]*Ci[1]*Ci[17]);
#ifdef DEBUG
  printf("94: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[4] += -cR;
  wdot[11] += -cR;
  wdot[17] += cR;

  //95: OH + CH3 (+M) <=> CH3OH (+M)
  cR = kf[67]*(Ci[4]*Ci[12]-kr[94]*Ci[20]);
#ifdef DEBUG
  printf("95: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[12] += -cR;
  wdot[20] += cR;

  //96: OH + CH3 <=> CH2 + H2O
  cR = kf[68]*(Ci[4]*Ci[12]-kr[95]*Ci[5]*Ci[10]);
#ifdef DEBUG
  printf("96: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[10] += cR;
  wdot[12] += -cR;

  //97: OH + CH3 <=> CH2(S) + H2O
  cR = kf[69]*(Ci[4]*Ci[12]-kr[96]*Ci[5]*Ci[11]);
#ifdef DEBUG
  printf("97: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[11] += cR;
  wdot[12] += -cR;

  //98: OH + CH4 <=> CH3 + H2O
  cR = kf[70]*(Ci[4]*Ci[13]-kr[97]*Ci[5]*Ci[12]);
#ifdef DEBUG
  printf("98: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[12] += cR;
  wdot[13] += -cR;

  //99: OH + CO <=> H + CO2
  cR = kf[71]*(Ci[4]*Ci[14]-kr[98]*Ci[1]*Ci[15]);
#ifdef DEBUG
  printf("99: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[4] += -cR;
  wdot[14] += -cR;
  wdot[15] += cR;

  //100: OH + HCO <=> H2O + CO
  cR = kf[256]*(Ci[4]*Ci[16]-kr[99]*Ci[5]*Ci[14]);
#ifdef DEBUG
  printf("100: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[14] += cR;
  wdot[16] += -cR;

  //101: OH + CH2O <=> HCO + H2O
  cR = kf[72]*(Ci[4]*Ci[17]-kr[100]*Ci[5]*Ci[16]);
#ifdef DEBUG
  printf("101: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[16] += cR;
  wdot[17] += -cR;

  //102: OH + CH2OH <=> H2O + CH2O
  cR = kf[257]*(Ci[4]*Ci[18]-kr[101]*Ci[5]*Ci[17]);
#ifdef DEBUG
  printf("102: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[17] += cR;
  wdot[18] += -cR;

  //103: OH + CH3O <=> H2O + CH2O
  cR = kf[258]*(Ci[4]*Ci[19]-kr[102]*Ci[5]*Ci[17]);
#ifdef DEBUG
  printf("103: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[17] += cR;
  wdot[19] += -cR;

  //104: OH + CH3OH <=> CH2OH + H2O
  cR = kf[73]*(Ci[4]*Ci[20]-kr[103]*Ci[5]*Ci[18]);
#ifdef DEBUG
  printf("104: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[18] += cR;
  wdot[20] += -cR;

  //105: OH + CH3OH <=> CH3O + H2O
  cR = kf[74]*(Ci[4]*Ci[20]-kr[104]*Ci[5]*Ci[19]);
#ifdef DEBUG
  printf("105: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[19] += cR;
  wdot[20] += -cR;

  //106: OH + C2H <=> H + HCCO
  cR = kf[259]*(Ci[4]*Ci[21]-kr[105]*Ci[1]*Ci[27]);
#ifdef DEBUG
  printf("106: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[4] += -cR;
  wdot[21] += -cR;
  wdot[27] += cR;

  //107: OH + C2H2 <=> H + CH2CO
  cR = kf[75]*(Ci[4]*Ci[22]-kr[106]*Ci[1]*Ci[28]);
#ifdef DEBUG
  printf("107: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[4] += -cR;
  wdot[22] += -cR;
  wdot[28] += cR;

  //108: OH + C2H2 <=> H + HCCOH
  cR = kf[76]*(Ci[4]*Ci[22]-kr[107]*Ci[1]*Ci[29]);
#ifdef DEBUG
  printf("108: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[4] += -cR;
  wdot[22] += -cR;
  wdot[29] += cR;

  //109: OH + C2H2 <=> C2H + H2O
  cR = kf[77]*(Ci[4]*Ci[22]-kr[108]*Ci[5]*Ci[21]);
#ifdef DEBUG
  printf("109: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[21] += cR;
  wdot[22] += -cR;

  //110: OH + C2H2 <=> CH3 + CO
  cR = kf[78]*(Ci[4]*Ci[22]-kr[109]*Ci[12]*Ci[14]);
#ifdef DEBUG
  printf("110: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[12] += cR;
  wdot[14] += cR;
  wdot[22] += -cR;

  //111: OH + C2H3 <=> H2O + C2H2
  cR = kf[260]*(Ci[4]*Ci[23]-kr[110]*Ci[5]*Ci[22]);
#ifdef DEBUG
  printf("111: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[22] += cR;
  wdot[23] += -cR;

  //112: OH + C2H4 <=> C2H3 + H2O
  cR = kf[79]*(Ci[4]*Ci[24]-kr[111]*Ci[5]*Ci[23]);
#ifdef DEBUG
  printf("112: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[23] += cR;
  wdot[24] += -cR;

  //113: OH + C2H6 <=> C2H5 + H2O
  cR = kf[80]*(Ci[4]*Ci[26]-kr[112]*Ci[5]*Ci[25]);
#ifdef DEBUG
  printf("113: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[25] += cR;
  wdot[26] += -cR;

  //114: OH + CH2CO <=> HCCO + H2O
  cR = kf[81]*(Ci[4]*Ci[28]-kr[113]*Ci[5]*Ci[27]);
#ifdef DEBUG
  printf("114: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[27] += cR;
  wdot[28] += -cR;

  //115: 2 HO2 <=> O2 + H2O2
  cR = kf[82]*(Ci[6]*Ci[6]-kr[114]*Ci[3]*Ci[7]);
#ifdef DEBUG
  printf("115: %+.15e\n", cR);
#endif
  wdot[3] += cR;
  wdot[6] += -2*cR;
  wdot[7] += cR;

  //116: 2 HO2 <=> O2 + H2O2
  cR = kf[83]*(Ci[6]*Ci[6]-kr[115]*Ci[3]*Ci[7]);
#ifdef DEBUG
  printf("116: %+.15e\n", cR);
#endif
  wdot[3] += cR;
  wdot[6] += -2*cR;
  wdot[7] += cR;

  //117: HO2 + CH2 <=> OH + CH2O
  cR = kf[261]*(Ci[6]*Ci[10]-kr[116]*Ci[4]*Ci[17]);
#ifdef DEBUG
  printf("117: %+.15e\n", cR);
#endif
  wdot[4] += cR;
  wdot[6] += -cR;
  wdot[10] += -cR;
  wdot[17] += cR;

  //118: HO2 + CH3 <=> O2 + CH4
  cR = kf[262]*(Ci[6]*Ci[12]-kr[117]*Ci[3]*Ci[13]);
#ifdef DEBUG
  printf("118: %+.15e\n", cR);
#endif
  wdot[3] += cR;
  wdot[6] += -cR;
  wdot[12] += -cR;
  wdot[13] += cR;

  //119: HO2 + CH3 <=> OH + CH3O
  cR = kf[263]*(Ci[6]*Ci[12]-kr[118]*Ci[4]*Ci[19]);
#ifdef DEBUG
  printf("119: %+.15e\n", cR);
#endif
  wdot[4] += cR;
  wdot[6] += -cR;
  wdot[12] += -cR;
  wdot[19] += cR;

  //120: HO2 + CO <=> OH + CO2
  cR = kf[84]*(Ci[6]*Ci[14]-kr[119]*Ci[4]*Ci[15]);
#ifdef DEBUG
  printf("120: %+.15e\n", cR);
#endif
  wdot[4] += cR;
  wdot[6] += -cR;
  wdot[14] += -cR;
  wdot[15] += cR;

  //121: HO2 + CH2O <=> HCO + H2O2
  cR = kf[85]*(Ci[6]*Ci[17]-kr[120]*Ci[7]*Ci[16]);
#ifdef DEBUG
  printf("121: %+.15e\n", cR);
#endif
  wdot[6] += -cR;
  wdot[7] += cR;
  wdot[16] += cR;
  wdot[17] += -cR;

  //122: C + O2 <=> O + CO
  cR = kf[86]*(Ci[3]*Ci[8]-kr[121]*Ci[2]*Ci[14]);
#ifdef DEBUG
  printf("122: %+.15e\n", cR);
#endif
  wdot[2] += cR;
  wdot[3] += -cR;
  wdot[8] += -cR;
  wdot[14] += cR;

  //123: C + CH2 <=> H + C2H
  cR = kf[264]*(Ci[8]*Ci[10]-kr[122]*Ci[1]*Ci[21]);
#ifdef DEBUG
  printf("123: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[8] += -cR;
  wdot[10] += -cR;
  wdot[21] += cR;

  //124: C + CH3 <=> H + C2H2
  cR = kf[265]*(Ci[8]*Ci[12]-kr[123]*Ci[1]*Ci[22]);
#ifdef DEBUG
  printf("124: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[8] += -cR;
  wdot[12] += -cR;
  wdot[22] += cR;

  //125: CH + O2 <=> O + HCO
  cR = kf[266]*(Ci[3]*Ci[9]-kr[124]*Ci[2]*Ci[16]);
#ifdef DEBUG
  printf("125: %+.15e\n", cR);
#endif
  wdot[2] += cR;
  wdot[3] += -cR;
  wdot[9] += -cR;
  wdot[16] += cR;

  //126: CH + H2 <=> H + CH2
  cR = kf[87]*(Ci[0]*Ci[9]-kr[125]*Ci[1]*Ci[10]);
#ifdef DEBUG
  printf("126: %+.15e\n", cR);
#endif
  wdot[0] += -cR;
  wdot[1] += cR;
  wdot[9] += -cR;
  wdot[10] += cR;

  //127: CH + H2O <=> H + CH2O
  cR = kf[217]*(Ci[5]*Ci[9]-kr[126]*Ci[1]*Ci[17]);
#ifdef DEBUG
  printf("127: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[5] += -cR;
  wdot[9] += -cR;
  wdot[17] += cR;

  //128: CH + CH2 <=> H + C2H2
  cR = kf[267]*(Ci[9]*Ci[10]-kr[127]*Ci[1]*Ci[22]);
#ifdef DEBUG
  printf("128: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[9] += -cR;
  wdot[10] += -cR;
  wdot[22] += cR;

  //129: CH + CH3 <=> H + C2H3
  cR = kf[268]*(Ci[9]*Ci[12]-kr[128]*Ci[1]*Ci[23]);
#ifdef DEBUG
  printf("129: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[9] += -cR;
  wdot[12] += -cR;
  wdot[23] += cR;

  //130: CH + CH4 <=> H + C2H4
  cR = kf[269]*(Ci[9]*Ci[13]-kr[129]*Ci[1]*Ci[24]);
#ifdef DEBUG
  printf("130: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[9] += -cR;
  wdot[13] += -cR;
  wdot[24] += cR;

  //131: CH + CO (+M) <=> HCCO (+M)
  cR = kf[88]*(Ci[9]*Ci[14]-kr[130]*Ci[27]);
#ifdef DEBUG
  printf("131: %+.15e\n", cR);
#endif
  wdot[9] += -cR;
  wdot[14] += -cR;
  wdot[27] += cR;

  //132: CH + CO2 <=> HCO + CO
  cR = kf[89]*(Ci[9]*Ci[15]-kr[131]*Ci[14]*Ci[16]);
#ifdef DEBUG
  printf("132: %+.15e\n", cR);
#endif
  wdot[9] += -cR;
  wdot[14] += cR;
  wdot[15] += -cR;
  wdot[16] += cR;

  //133: CH + CH2O <=> H + CH2CO
  cR = kf[90]*(Ci[9]*Ci[17]-kr[132]*Ci[1]*Ci[28]);
#ifdef DEBUG
  printf("133: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[9] += -cR;
  wdot[17] += -cR;
  wdot[28] += cR;

  //134: CH + HCCO <=> CO + C2H2
  cR = kf[271]*(Ci[9]*Ci[27]-kr[133]*Ci[14]*Ci[22]);
#ifdef DEBUG
  printf("134: %+.15e\n", cR);
#endif
  wdot[9] += -cR;
  wdot[14] += cR;
  wdot[22] += cR;
  wdot[27] += -cR;

  //135: CH2 + O2 => OH + H + CO
  cR = kf[225]*(Ci[3]*Ci[10]);
#ifdef DEBUG
  printf("135: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[3] += -cR;
  wdot[4] += cR;
  wdot[10] += -cR;
  wdot[14] += cR;

  //136: CH2 + H2 <=> H + CH3
  cR = kf[91]*(Ci[0]*Ci[10]-kr[134]*Ci[1]*Ci[12]);
#ifdef DEBUG
  printf("136: %+.15e\n", cR);
#endif
  wdot[0] += -cR;
  wdot[1] += cR;
  wdot[10] += -cR;
  wdot[12] += cR;

  //137: 2 CH2 <=> H2 + C2H2
  cR = kf[92]*(Ci[10]*Ci[10]-kr[135]*Ci[0]*Ci[22]);
#ifdef DEBUG
  printf("137: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[10] += -2*cR;
  wdot[22] += cR;

  //138: CH2 + CH3 <=> H + C2H4
  cR = kf[272]*(Ci[10]*Ci[12]-kr[136]*Ci[1]*Ci[24]);
#ifdef DEBUG
  printf("138: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[10] += -cR;
  wdot[12] += -cR;
  wdot[24] += cR;

  //139: CH2 + CH4 <=> 2 CH3
  cR = kf[93]*(Ci[10]*Ci[13]-kr[137]*Ci[12]*Ci[12]);
#ifdef DEBUG
  printf("139: %+.15e\n", cR);
#endif
  wdot[10] += -cR;
  wdot[12] += 2*cR;
  wdot[13] += -cR;

  //140: CH2 + CO (+M) <=> CH2CO (+M)
  cR = kf[95]*(Ci[10]*Ci[14]-kr[138]*Ci[28]);
#ifdef DEBUG
  printf("140: %+.15e\n", cR);
#endif
  wdot[10] += -cR;
  wdot[14] += -cR;
  wdot[28] += cR;

  //141: CH2 + HCCO <=> C2H3 + CO
  cR = kf[273]*(Ci[10]*Ci[27]-kr[139]*Ci[14]*Ci[23]);
#ifdef DEBUG
  printf("141: %+.15e\n", cR);
#endif
  wdot[10] += -cR;
  wdot[14] += cR;
  wdot[23] += cR;
  wdot[27] += -cR;

  //142: CH2(S) + N2 <=> CH2 + N2
  cR = kf[213]*(Ci[11]*Ci[47]-kr[140]*Ci[10]*Ci[47]);
#ifdef DEBUG
  printf("142: %+.15e\n", cR);
#endif
  wdot[10] += cR;
  wdot[11] += -cR;

  //143: CH2(S) + AR <=> CH2 + AR
  cR = kf[338]*(Ci[11]*Ci[52]-kr[141]*Ci[10]*Ci[52]);
#ifdef DEBUG
  printf("143: %+.15e\n", cR);
#endif
  wdot[10] += cR;
  wdot[11] += -cR;

  //144: CH2(S) + O2 <=> H + OH + CO
  cR = kf[274]*(Ci[3]*Ci[11]-kr[142]*Ci[1]*Ci[4]*Ci[14]);
#ifdef DEBUG
  printf("144: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[3] += -cR;
  wdot[4] += cR;
  wdot[11] += -cR;
  wdot[14] += cR;

  //145: CH2(S) + O2 <=> CO + H2O
  cR = kf[275]*(Ci[3]*Ci[11]-kr[143]*Ci[5]*Ci[14]);
#ifdef DEBUG
  printf("145: %+.15e\n", cR);
#endif
  wdot[3] += -cR;
  wdot[5] += cR;
  wdot[11] += -cR;
  wdot[14] += cR;

  //146: CH2(S) + H2 <=> CH3 + H
  cR = kf[276]*(Ci[0]*Ci[11]-kr[144]*Ci[1]*Ci[12]);
#ifdef DEBUG
  printf("146: %+.15e\n", cR);
#endif
  wdot[0] += -cR;
  wdot[1] += cR;
  wdot[11] += -cR;
  wdot[12] += cR;

  //147: CH2(S) + H2O (+M) <=> CH3OH (+M)
  cR = kf[97]*(Ci[5]*Ci[11]-kr[145]*Ci[20]);
#ifdef DEBUG
  printf("147: %+.15e\n", cR);
#endif
  wdot[5] += -cR;
  wdot[11] += -cR;
  wdot[20] += cR;

  //148: CH2(S) + H2O <=> CH2 + H2O
  cR = kf[277]*(Ci[5]*Ci[11]-kr[146]*Ci[5]*Ci[10]);
#ifdef DEBUG
  printf("148: %+.15e\n", cR);
#endif
  wdot[10] += cR;
  wdot[11] += -cR;

  //149: CH2(S) + CH3 <=> H + C2H4
  cR = kf[214]*(Ci[11]*Ci[12]-kr[147]*Ci[1]*Ci[24]);
#ifdef DEBUG
  printf("149: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[11] += -cR;
  wdot[12] += -cR;
  wdot[24] += cR;

  //150: CH2(S) + CH4 <=> 2 CH3
  cR = kf[339]*(Ci[11]*Ci[13]-kr[148]*Ci[12]*Ci[12]);
#ifdef DEBUG
  printf("150: %+.15e\n", cR);
#endif
  wdot[11] += -cR;
  wdot[12] += 2*cR;
  wdot[13] += -cR;

  //151: CH2(S) + CO <=> CH2 + CO
  cR = kf[278]*(Ci[11]*Ci[14]-kr[149]*Ci[10]*Ci[14]);
#ifdef DEBUG
  printf("151: %+.15e\n", cR);
#endif
  wdot[10] += cR;
  wdot[11] += -cR;

  //152: CH2(S) + CO2 <=> CH2 + CO2
  cR = kf[279]*(Ci[11]*Ci[15]-kr[150]*Ci[10]*Ci[15]);
#ifdef DEBUG
  printf("152: %+.15e\n", cR);
#endif
  wdot[10] += cR;
  wdot[11] += -cR;

  //153: CH2(S) + CO2 <=> CO + CH2O
  cR = kf[280]*(Ci[11]*Ci[15]-kr[151]*Ci[14]*Ci[17]);
#ifdef DEBUG
  printf("153: %+.15e\n", cR);
#endif
  wdot[11] += -cR;
  wdot[14] += cR;
  wdot[15] += -cR;
  wdot[17] += cR;

  //154: CH2(S) + C2H6 <=> CH3 + C2H5
  cR = kf[98]*(Ci[11]*Ci[26]-kr[152]*Ci[12]*Ci[25]);
#ifdef DEBUG
  printf("154: %+.15e\n", cR);
#endif
  wdot[11] += -cR;
  wdot[12] += cR;
  wdot[25] += cR;
  wdot[26] += -cR;

  //155: CH3 + O2 <=> O + CH3O
  cR = kf[99]*(Ci[3]*Ci[12]-kr[153]*Ci[2]*Ci[19]);
#ifdef DEBUG
  printf("155: %+.15e\n", cR);
#endif
  wdot[2] += cR;
  wdot[3] += -cR;
  wdot[12] += -cR;
  wdot[19] += cR;

  //156: CH3 + O2 <=> OH + CH2O
  cR = kf[100]*(Ci[3]*Ci[12]-kr[154]*Ci[4]*Ci[17]);
#ifdef DEBUG
  printf("156: %+.15e\n", cR);
#endif
  wdot[3] += -cR;
  wdot[4] += cR;
  wdot[12] += -cR;
  wdot[17] += cR;

  //157: CH3 + H2O2 <=> HO2 + CH4
  cR = kf[101]*(Ci[7]*Ci[12]-kr[155]*Ci[6]*Ci[13]);
#ifdef DEBUG
  printf("157: %+.15e\n", cR);
#endif
  wdot[6] += cR;
  wdot[7] += -cR;
  wdot[12] += -cR;
  wdot[13] += cR;

  //158: 2 CH3 (+M) <=> C2H6 (+M)
  cR = kf[103]*(Ci[12]*Ci[12]-kr[156]*Ci[26]);
#ifdef DEBUG
  printf("158: %+.15e\n", cR);
#endif
  wdot[12] += -2*cR;
  wdot[26] += cR;

  //159: 2 CH3 <=> H + C2H5
  cR = kf[104]*(Ci[12]*Ci[12]-kr[157]*Ci[1]*Ci[25]);
#ifdef DEBUG
  printf("159: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[12] += -2*cR;
  wdot[25] += cR;

  //160: CH3 + HCO <=> CH4 + CO
  cR = kf[281]*(Ci[12]*Ci[16]-kr[158]*Ci[13]*Ci[14]);
#ifdef DEBUG
  printf("160: %+.15e\n", cR);
#endif
  wdot[12] += -cR;
  wdot[13] += cR;
  wdot[14] += cR;
  wdot[16] += -cR;

  //161: CH3 + CH2O <=> HCO + CH4
  cR = kf[105]*(Ci[12]*Ci[17]-kr[159]*Ci[13]*Ci[16]);
#ifdef DEBUG
  printf("161: %+.15e\n", cR);
#endif
  wdot[12] += -cR;
  wdot[13] += cR;
  wdot[16] += cR;
  wdot[17] += -cR;

  //162: CH3 + CH3OH <=> CH2OH + CH4
  cR = kf[215]*(Ci[12]*Ci[20]-kr[160]*Ci[13]*Ci[18]);
#ifdef DEBUG
  printf("162: %+.15e\n", cR);
#endif
  wdot[12] += -cR;
  wdot[13] += cR;
  wdot[18] += cR;
  wdot[20] += -cR;

  //163: CH3 + CH3OH <=> CH3O + CH4
  cR = kf[340]*(Ci[12]*Ci[20]-kr[161]*Ci[13]*Ci[19]);
#ifdef DEBUG
  printf("163: %+.15e\n", cR);
#endif
  wdot[12] += -cR;
  wdot[13] += cR;
  wdot[19] += cR;
  wdot[20] += -cR;

  //164: CH3 + C2H4 <=> C2H3 + CH4
  cR = kf[106]*(Ci[12]*Ci[24]-kr[162]*Ci[13]*Ci[23]);
#ifdef DEBUG
  printf("164: %+.15e\n", cR);
#endif
  wdot[12] += -cR;
  wdot[13] += cR;
  wdot[23] += cR;
  wdot[24] += -cR;

  //165: CH3 + C2H6 <=> C2H5 + CH4
  cR = kf[107]*(Ci[12]*Ci[26]-kr[163]*Ci[13]*Ci[25]);
#ifdef DEBUG
  printf("165: %+.15e\n", cR);
#endif
  wdot[12] += -cR;
  wdot[13] += cR;
  wdot[25] += cR;
  wdot[26] += -cR;

  //166: HCO + H2O <=> H + CO + H2O
  cR = kf[216]*(Ci[5]*Ci[16]-kr[164]*Ci[1]*Ci[5]*Ci[14]);
#ifdef DEBUG
  printf("166: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[14] += cR;
  wdot[16] += -cR;

  //167: HCO + M <=> H + CO + M
  cR = kf[341]*(Ci[16]-kr[165]*Ci[1]*Ci[14]);
#ifdef DEBUG
  printf("167: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[14] += cR;
  wdot[16] += -cR;

  //168: HCO + O2 <=> HO2 + CO
  cR = kf[219]*(Ci[3]*Ci[16]-kr[166]*Ci[6]*Ci[14]);
#ifdef DEBUG
  printf("168: %+.15e\n", cR);
#endif
  wdot[3] += -cR;
  wdot[6] += cR;
  wdot[14] += cR;
  wdot[16] += -cR;

  //169: CH2OH + O2 <=> HO2 + CH2O
  cR = kf[108]*(Ci[3]*Ci[18]-kr[167]*Ci[6]*Ci[17]);
#ifdef DEBUG
  printf("169: %+.15e\n", cR);
#endif
  wdot[3] += -cR;
  wdot[6] += cR;
  wdot[17] += cR;
  wdot[18] += -cR;

  //170: CH3O + O2 <=> HO2 + CH2O
  cR = kf[109]*(Ci[3]*Ci[19]-kr[168]*Ci[6]*Ci[17]);
#ifdef DEBUG
  printf("170: %+.15e\n", cR);
#endif
  wdot[3] += -cR;
  wdot[6] += cR;
  wdot[17] += cR;
  wdot[19] += -cR;

  //171: C2H + O2 <=> HCO + CO
  cR = kf[342]*(Ci[3]*Ci[21]-kr[169]*Ci[14]*Ci[16]);
#ifdef DEBUG
  printf("171: %+.15e\n", cR);
#endif
  wdot[3] += -cR;
  wdot[14] += cR;
  wdot[16] += cR;
  wdot[21] += -cR;

  //172: C2H + H2 <=> H + C2H2
  cR = kf[110]*(Ci[0]*Ci[21]-kr[170]*Ci[1]*Ci[22]);
#ifdef DEBUG
  printf("172: %+.15e\n", cR);
#endif
  wdot[0] += -cR;
  wdot[1] += cR;
  wdot[21] += -cR;
  wdot[22] += cR;

  //173: C2H3 + O2 <=> HCO + CH2O
  cR = kf[111]*(Ci[3]*Ci[23]-kr[171]*Ci[16]*Ci[17]);
#ifdef DEBUG
  printf("173: %+.15e\n", cR);
#endif
  wdot[3] += -cR;
  wdot[16] += cR;
  wdot[17] += cR;
  wdot[23] += -cR;

  //174: C2H4 (+M) <=> H2 + C2H2 (+M)
  cR = kf[113]*(Ci[24]-kr[172]*Ci[0]*Ci[22]);
#ifdef DEBUG
  printf("174: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[22] += cR;
  wdot[24] += -cR;

  //175: C2H5 + O2 <=> HO2 + C2H4
  cR = kf[114]*(Ci[3]*Ci[25]-kr[173]*Ci[6]*Ci[24]);
#ifdef DEBUG
  printf("175: %+.15e\n", cR);
#endif
  wdot[3] += -cR;
  wdot[6] += cR;
  wdot[24] += cR;
  wdot[25] += -cR;

  //176: HCCO + O2 <=> OH + 2 CO
  cR = kf[115]*(Ci[3]*Ci[27]-kr[174]*Ci[4]*Ci[14]*Ci[14]);
#ifdef DEBUG
  printf("176: %+.15e\n", cR);
#endif
  wdot[3] += -cR;
  wdot[4] += cR;
  wdot[14] += 2*cR;
  wdot[27] += -cR;

  //177: 2 HCCO <=> 2 CO + C2H2
  cR = kf[282]*(Ci[27]*Ci[27]-kr[175]*Ci[14]*Ci[14]*Ci[22]);
#ifdef DEBUG
  printf("177: %+.15e\n", cR);
#endif
  wdot[14] += 2*cR;
  wdot[22] += cR;
  wdot[27] += -2*cR;

  //178: N + NO <=> N2 + O
  cR = kf[116]*(Ci[30]*Ci[35]-kr[176]*Ci[2]*Ci[47]);
#ifdef DEBUG
  printf("178: %+.15e\n", cR);
#endif
  wdot[2] += cR;
  wdot[30] += -cR;
  wdot[35] += -cR;
  wdot[47] += cR;

  //179: N + O2 <=> NO + O
  cR = kf[117]*(Ci[3]*Ci[30]-kr[177]*Ci[2]*Ci[35]);
#ifdef DEBUG
  printf("179: %+.15e\n", cR);
#endif
  wdot[2] += cR;
  wdot[3] += -cR;
  wdot[30] += -cR;
  wdot[35] += cR;

  //180: N + OH <=> NO + H
  cR = kf[118]*(Ci[4]*Ci[30]-kr[178]*Ci[1]*Ci[35]);
#ifdef DEBUG
  printf("180: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[4] += -cR;
  wdot[30] += -cR;
  wdot[35] += cR;

  //181: N2O + O <=> N2 + O2
  cR = kf[119]*(Ci[2]*Ci[37]-kr[179]*Ci[3]*Ci[47]);
#ifdef DEBUG
  printf("181: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[3] += cR;
  wdot[37] += -cR;
  wdot[47] += cR;

  //182: N2O + O <=> 2 NO
  cR = kf[120]*(Ci[2]*Ci[37]-kr[180]*Ci[35]*Ci[35]);
#ifdef DEBUG
  printf("182: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[35] += 2*cR;
  wdot[37] += -cR;

  //183: N2O + H <=> N2 + OH
  cR = kf[121]*(Ci[1]*Ci[37]-kr[181]*Ci[4]*Ci[47]);
#ifdef DEBUG
  printf("183: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[4] += cR;
  wdot[37] += -cR;
  wdot[47] += cR;

  //184: N2O + OH <=> N2 + HO2
  cR = kf[122]*(Ci[4]*Ci[37]-kr[182]*Ci[6]*Ci[47]);
#ifdef DEBUG
  printf("184: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[6] += cR;
  wdot[37] += -cR;
  wdot[47] += cR;

  //185: N2O (+M) <=> N2 + O (+M)
  cR = kf[124]*(Ci[37]-kr[183]*Ci[2]*Ci[47]);
#ifdef DEBUG
  printf("185: %+.15e\n", cR);
#endif
  wdot[2] += cR;
  wdot[37] += -cR;
  wdot[47] += cR;

  //186: HO2 + NO <=> NO2 + OH
  cR = kf[125]*(Ci[6]*Ci[35]-kr[184]*Ci[4]*Ci[36]);
#ifdef DEBUG
  printf("186: %+.15e\n", cR);
#endif
  wdot[4] += cR;
  wdot[6] += -cR;
  wdot[35] += -cR;
  wdot[36] += cR;

  //187: NO + O + M <=> NO2 + M
  cR = kf[126]*(Ci[2]*Ci[35]-kr[185]*Ci[36]);
#ifdef DEBUG
  printf("187: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[35] += -cR;
  wdot[36] += cR;

  //188: NO2 + O <=> NO + O2
  cR = kf[127]*(Ci[2]*Ci[36]-kr[186]*Ci[3]*Ci[35]);
#ifdef DEBUG
  printf("188: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[3] += cR;
  wdot[35] += cR;
  wdot[36] += -cR;

  //189: NO2 + H <=> NO + OH
  cR = kf[128]*(Ci[1]*Ci[36]-kr[187]*Ci[4]*Ci[35]);
#ifdef DEBUG
  printf("189: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[4] += cR;
  wdot[35] += cR;
  wdot[36] += -cR;

  //190: NH + O <=> NO + H
  cR = kf[283]*(Ci[2]*Ci[31]-kr[188]*Ci[1]*Ci[35]);
#ifdef DEBUG
  printf("190: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[2] += -cR;
  wdot[31] += -cR;
  wdot[35] += cR;

  //191: NH + H <=> N + H2
  cR = kf[129]*(Ci[1]*Ci[31]-kr[189]*Ci[0]*Ci[30]);
#ifdef DEBUG
  printf("191: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[30] += cR;
  wdot[31] += -cR;

  //192: NH + OH <=> HNO + H
  cR = kf[284]*(Ci[4]*Ci[31]-kr[190]*Ci[1]*Ci[38]);
#ifdef DEBUG
  printf("192: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[4] += -cR;
  wdot[31] += -cR;
  wdot[38] += cR;

  //193: NH + OH <=> N + H2O
  cR = kf[130]*(Ci[4]*Ci[31]-kr[191]*Ci[5]*Ci[30]);
#ifdef DEBUG
  printf("193: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[30] += cR;
  wdot[31] += -cR;

  //194: NH + O2 <=> HNO + O
  cR = kf[131]*(Ci[3]*Ci[31]-kr[192]*Ci[2]*Ci[38]);
#ifdef DEBUG
  printf("194: %+.15e\n", cR);
#endif
  wdot[2] += cR;
  wdot[3] += -cR;
  wdot[31] += -cR;
  wdot[38] += cR;

  //195: NH + O2 <=> NO + OH
  cR = kf[132]*(Ci[3]*Ci[31]-kr[193]*Ci[4]*Ci[35]);
#ifdef DEBUG
  printf("195: %+.15e\n", cR);
#endif
  wdot[3] += -cR;
  wdot[4] += cR;
  wdot[31] += -cR;
  wdot[35] += cR;

  //196: NH + N <=> N2 + H
  cR = kf[285]*(Ci[30]*Ci[31]-kr[194]*Ci[1]*Ci[47]);
#ifdef DEBUG
  printf("196: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[30] += -cR;
  wdot[31] += -cR;
  wdot[47] += cR;

  //197: NH + H2O <=> HNO + H2
  cR = kf[133]*(Ci[5]*Ci[31]-kr[195]*Ci[0]*Ci[38]);
#ifdef DEBUG
  printf("197: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[5] += -cR;
  wdot[31] += -cR;
  wdot[38] += cR;

  //198: NH + NO <=> N2 + OH
  cR = kf[134]*(Ci[31]*Ci[35]-kr[196]*Ci[4]*Ci[47]);
#ifdef DEBUG
  printf("198: %+.15e\n", cR);
#endif
  wdot[4] += cR;
  wdot[31] += -cR;
  wdot[35] += -cR;
  wdot[47] += cR;

  //199: NH + NO <=> N2O + H
  cR = kf[135]*(Ci[31]*Ci[35]-kr[197]*Ci[1]*Ci[37]);
#ifdef DEBUG
  printf("199: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[31] += -cR;
  wdot[35] += -cR;
  wdot[37] += cR;

  //200: NH2 + O <=> OH + NH
  cR = kf[286]*(Ci[2]*Ci[32]-kr[198]*Ci[4]*Ci[31]);
#ifdef DEBUG
  printf("200: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[31] += cR;
  wdot[32] += -cR;

  //201: NH2 + O <=> H + HNO
  cR = kf[287]*(Ci[2]*Ci[32]-kr[199]*Ci[1]*Ci[38]);
#ifdef DEBUG
  printf("201: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[2] += -cR;
  wdot[32] += -cR;
  wdot[38] += cR;

  //202: NH2 + H <=> NH + H2
  cR = kf[136]*(Ci[1]*Ci[32]-kr[200]*Ci[0]*Ci[31]);
#ifdef DEBUG
  printf("202: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[31] += cR;
  wdot[32] += -cR;

  //203: NH2 + OH <=> NH + H2O
  cR = kf[137]*(Ci[4]*Ci[32]-kr[201]*Ci[5]*Ci[31]);
#ifdef DEBUG
  printf("203: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[31] += cR;
  wdot[32] += -cR;

  //204: NNH <=> N2 + H
  cR = kf[288]*(Ci[34]-kr[202]*Ci[1]*Ci[47]);
#ifdef DEBUG
  printf("204: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[34] += -cR;
  wdot[47] += cR;

  //205: NNH + M <=> N2 + H + M
  cR = kf[138]*(Ci[34]-kr[203]*Ci[1]*Ci[47]);
#ifdef DEBUG
  printf("205: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[34] += -cR;
  wdot[47] += cR;

  //206: NNH + O2 <=> HO2 + N2
  cR = kf[289]*(Ci[3]*Ci[34]-kr[204]*Ci[6]*Ci[47]);
#ifdef DEBUG
  printf("206: %+.15e\n", cR);
#endif
  wdot[3] += -cR;
  wdot[6] += cR;
  wdot[34] += -cR;
  wdot[47] += cR;

  //207: NNH + O <=> OH + N2
  cR = kf[290]*(Ci[2]*Ci[34]-kr[205]*Ci[4]*Ci[47]);
#ifdef DEBUG
  printf("207: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[34] += -cR;
  wdot[47] += cR;

  //208: NNH + O <=> NH + NO
  cR = kf[291]*(Ci[2]*Ci[34]-kr[206]*Ci[31]*Ci[35]);
#ifdef DEBUG
  printf("208: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[31] += cR;
  wdot[34] += -cR;
  wdot[35] += cR;

  //209: NNH + H <=> H2 + N2
  cR = kf[292]*(Ci[1]*Ci[34]-kr[207]*Ci[0]*Ci[47]);
#ifdef DEBUG
  printf("209: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[34] += -cR;
  wdot[47] += cR;

  //210: NNH + OH <=> H2O + N2
  cR = kf[293]*(Ci[4]*Ci[34]-kr[208]*Ci[5]*Ci[47]);
#ifdef DEBUG
  printf("210: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[34] += -cR;
  wdot[47] += cR;

  //211: NNH + CH3 <=> CH4 + N2
  cR = kf[294]*(Ci[12]*Ci[34]-kr[209]*Ci[13]*Ci[47]);
#ifdef DEBUG
  printf("211: %+.15e\n", cR);
#endif
  wdot[12] += -cR;
  wdot[13] += cR;
  wdot[34] += -cR;
  wdot[47] += cR;

  //212: H + NO + M <=> HNO + M
  cR = kf[139]*(Ci[1]*Ci[35]-kr[210]*Ci[38]);
#ifdef DEBUG
  printf("212: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[35] += -cR;
  wdot[38] += cR;

  //213: HNO + O <=> NO + OH
  cR = kf[295]*(Ci[2]*Ci[38]-kr[211]*Ci[4]*Ci[35]);
#ifdef DEBUG
  printf("213: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[35] += cR;
  wdot[38] += -cR;

  //214: HNO + H <=> H2 + NO
  cR = kf[140]*(Ci[1]*Ci[38]-kr[212]*Ci[0]*Ci[35]);
#ifdef DEBUG
  printf("214: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[35] += cR;
  wdot[38] += -cR;

  //215: HNO + OH <=> NO + H2O
  cR = kf[141]*(Ci[4]*Ci[38]-kr[213]*Ci[5]*Ci[35]);
#ifdef DEBUG
  printf("215: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[35] += cR;
  wdot[38] += -cR;

  //216: HNO + O2 <=> HO2 + NO
  cR = kf[142]*(Ci[3]*Ci[38]-kr[214]*Ci[6]*Ci[35]);
#ifdef DEBUG
  printf("216: %+.15e\n", cR);
#endif
  wdot[3] += -cR;
  wdot[6] += cR;
  wdot[35] += cR;
  wdot[38] += -cR;

  //217: CN + O <=> CO + N
  cR = kf[296]*(Ci[2]*Ci[39]-kr[215]*Ci[14]*Ci[30]);
#ifdef DEBUG
  printf("217: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[14] += cR;
  wdot[30] += cR;
  wdot[39] += -cR;

  //218: CN + OH <=> NCO + H
  cR = kf[297]*(Ci[4]*Ci[39]-kr[216]*Ci[1]*Ci[46]);
#ifdef DEBUG
  printf("218: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[4] += -cR;
  wdot[39] += -cR;
  wdot[46] += cR;

  //219: CN + H2O <=> HCN + OH
  cR = kf[143]*(Ci[5]*Ci[39]-kr[217]*Ci[4]*Ci[40]);
#ifdef DEBUG
  printf("219: %+.15e\n", cR);
#endif
  wdot[4] += cR;
  wdot[5] += -cR;
  wdot[39] += -cR;
  wdot[40] += cR;

  //220: CN + O2 <=> NCO + O
  cR = kf[144]*(Ci[3]*Ci[39]-kr[218]*Ci[2]*Ci[46]);
#ifdef DEBUG
  printf("220: %+.15e\n", cR);
#endif
  wdot[2] += cR;
  wdot[3] += -cR;
  wdot[39] += -cR;
  wdot[46] += cR;

  //221: CN + H2 <=> HCN + H
  cR = kf[145]*(Ci[0]*Ci[39]-kr[219]*Ci[1]*Ci[40]);
#ifdef DEBUG
  printf("221: %+.15e\n", cR);
#endif
  wdot[0] += -cR;
  wdot[1] += cR;
  wdot[39] += -cR;
  wdot[40] += cR;

  //222: NCO + O <=> NO + CO
  cR = kf[298]*(Ci[2]*Ci[46]-kr[220]*Ci[14]*Ci[35]);
#ifdef DEBUG
  printf("222: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[14] += cR;
  wdot[35] += cR;
  wdot[46] += -cR;

  //223: NCO + H <=> NH + CO
  cR = kf[299]*(Ci[1]*Ci[46]-kr[221]*Ci[14]*Ci[31]);
#ifdef DEBUG
  printf("223: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[14] += cR;
  wdot[31] += cR;
  wdot[46] += -cR;

  //224: NCO + OH <=> NO + H + CO
  cR = kf[300]*(Ci[4]*Ci[46]-kr[222]*Ci[1]*Ci[14]*Ci[35]);
#ifdef DEBUG
  printf("224: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[4] += -cR;
  wdot[14] += cR;
  wdot[35] += cR;
  wdot[46] += -cR;

  //225: NCO + N <=> N2 + CO
  cR = kf[301]*(Ci[30]*Ci[46]-kr[223]*Ci[14]*Ci[47]);
#ifdef DEBUG
  printf("225: %+.15e\n", cR);
#endif
  wdot[14] += cR;
  wdot[30] += -cR;
  wdot[46] += -cR;
  wdot[47] += cR;

  //226: NCO + O2 <=> NO + CO2
  cR = kf[146]*(Ci[3]*Ci[46]-kr[224]*Ci[15]*Ci[35]);
#ifdef DEBUG
  printf("226: %+.15e\n", cR);
#endif
  wdot[3] += -cR;
  wdot[15] += cR;
  wdot[35] += cR;
  wdot[46] += -cR;

  //227: NCO + M <=> N + CO + M
  cR = kf[147]*(Ci[46]-kr[225]*Ci[14]*Ci[30]);
#ifdef DEBUG
  printf("227: %+.15e\n", cR);
#endif
  wdot[14] += cR;
  wdot[30] += cR;
  wdot[46] += -cR;

  //228: NCO + NO <=> N2O + CO
  cR = kf[148]*(Ci[35]*Ci[46]-kr[226]*Ci[14]*Ci[37]);
#ifdef DEBUG
  printf("228: %+.15e\n", cR);
#endif
  wdot[14] += cR;
  wdot[35] += -cR;
  wdot[37] += cR;
  wdot[46] += -cR;

  //229: NCO + NO <=> N2 + CO2
  cR = kf[149]*(Ci[35]*Ci[46]-kr[227]*Ci[15]*Ci[47]);
#ifdef DEBUG
  printf("229: %+.15e\n", cR);
#endif
  wdot[15] += cR;
  wdot[35] += -cR;
  wdot[46] += -cR;
  wdot[47] += cR;

  //230: HCN + M <=> H + CN + M
  cR = kf[150]*(Ci[40]-kr[228]*Ci[1]*Ci[39]);
#ifdef DEBUG
  printf("230: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[39] += cR;
  wdot[40] += -cR;

  //231: HCN + O <=> NCO + H
  cR = kf[218]*(Ci[2]*Ci[40]-kr[229]*Ci[1]*Ci[46]);
#ifdef DEBUG
  printf("231: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[2] += -cR;
  wdot[40] += -cR;
  wdot[46] += cR;

  //232: HCN + O <=> NH + CO
  cR = kf[343]*(Ci[2]*Ci[40]-kr[230]*Ci[14]*Ci[31]);
#ifdef DEBUG
  printf("232: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[14] += cR;
  wdot[31] += cR;
  wdot[40] += -cR;

  //233: HCN + O <=> CN + OH
  cR = kf[151]*(Ci[2]*Ci[40]-kr[231]*Ci[4]*Ci[39]);
#ifdef DEBUG
  printf("233: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[39] += cR;
  wdot[40] += -cR;

  //234: HCN + OH <=> HOCN + H
  cR = kf[152]*(Ci[4]*Ci[40]-kr[232]*Ci[1]*Ci[44]);
#ifdef DEBUG
  printf("234: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[4] += -cR;
  wdot[40] += -cR;
  wdot[44] += cR;

  //235: HCN + OH <=> HNCO + H
  cR = kf[153]*(Ci[4]*Ci[40]-kr[233]*Ci[1]*Ci[45]);
#ifdef DEBUG
  printf("235: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[4] += -cR;
  wdot[40] += -cR;
  wdot[45] += cR;

  //236: HCN + OH <=> NH2 + CO
  cR = kf[154]*(Ci[4]*Ci[40]-kr[234]*Ci[14]*Ci[32]);
#ifdef DEBUG
  printf("236: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[14] += cR;
  wdot[32] += cR;
  wdot[40] += -cR;

  //237: H + HCN (+M) <=> H2CN (+M)
  cR = kf[155]*(Ci[1]*Ci[40]-kr[235]*Ci[41]);
#ifdef DEBUG
  printf("237: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[40] += -cR;
  wdot[41] += cR;

  //238: H2CN + N <=> N2 + CH2
  cR = kf[344]*(Ci[30]*Ci[41]-kr[236]*Ci[10]*Ci[47]);
#ifdef DEBUG
  printf("238: %+.15e\n", cR);
#endif
  wdot[10] += cR;
  wdot[30] += -cR;
  wdot[41] += -cR;
  wdot[47] += cR;

  //239: C + N2 <=> CN + N
  cR = kf[156]*(Ci[8]*Ci[47]-kr[237]*Ci[30]*Ci[39]);
#ifdef DEBUG
  printf("239: %+.15e\n", cR);
#endif
  wdot[8] += -cR;
  wdot[30] += cR;
  wdot[39] += cR;
  wdot[47] += -cR;

  //240: CH + N2 <=> HCN + N
  cR = kf[157]*(Ci[9]*Ci[47]-kr[238]*Ci[30]*Ci[40]);
#ifdef DEBUG
  printf("240: %+.15e\n", cR);
#endif
  wdot[9] += -cR;
  wdot[30] += cR;
  wdot[40] += cR;
  wdot[47] += -cR;

  //241: CH + N2 (+M) <=> HCNN (+M)
  cR = kf[159]*(Ci[9]*Ci[47]-kr[239]*Ci[42]);
#ifdef DEBUG
  printf("241: %+.15e\n", cR);
#endif
  wdot[9] += -cR;
  wdot[42] += cR;
  wdot[47] += -cR;

  //242: CH2 + N2 <=> HCN + NH
  cR = kf[160]*(Ci[10]*Ci[47]-kr[240]*Ci[31]*Ci[40]);
#ifdef DEBUG
  printf("242: %+.15e\n", cR);
#endif
  wdot[10] += -cR;
  wdot[31] += cR;
  wdot[40] += cR;
  wdot[47] += -cR;

  //243: CH2(S) + N2 <=> NH + HCN
  cR = kf[161]*(Ci[11]*Ci[47]-kr[241]*Ci[31]*Ci[40]);
#ifdef DEBUG
  printf("243: %+.15e\n", cR);
#endif
  wdot[11] += -cR;
  wdot[31] += cR;
  wdot[40] += cR;
  wdot[47] += -cR;

  //244: C + NO <=> CN + O
  cR = kf[303]*(Ci[8]*Ci[35]-kr[242]*Ci[2]*Ci[39]);
#ifdef DEBUG
  printf("244: %+.15e\n", cR);
#endif
  wdot[2] += cR;
  wdot[8] += -cR;
  wdot[35] += -cR;
  wdot[39] += cR;

  //245: C + NO <=> CO + N
  cR = kf[304]*(Ci[8]*Ci[35]-kr[243]*Ci[14]*Ci[30]);
#ifdef DEBUG
  printf("245: %+.15e\n", cR);
#endif
  wdot[8] += -cR;
  wdot[14] += cR;
  wdot[30] += cR;
  wdot[35] += -cR;

  //246: CH + NO <=> HCN + O
  cR = kf[305]*(Ci[9]*Ci[35]-kr[244]*Ci[2]*Ci[40]);
#ifdef DEBUG
  printf("246: %+.15e\n", cR);
#endif
  wdot[2] += cR;
  wdot[9] += -cR;
  wdot[35] += -cR;
  wdot[40] += cR;

  //247: CH + NO <=> H + NCO
  cR = kf[306]*(Ci[9]*Ci[35]-kr[245]*Ci[1]*Ci[46]);
#ifdef DEBUG
  printf("247: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[9] += -cR;
  wdot[35] += -cR;
  wdot[46] += cR;

  //248: CH + NO <=> N + HCO
  cR = kf[307]*(Ci[9]*Ci[35]-kr[246]*Ci[16]*Ci[30]);
#ifdef DEBUG
  printf("248: %+.15e\n", cR);
#endif
  wdot[9] += -cR;
  wdot[16] += cR;
  wdot[30] += cR;
  wdot[35] += -cR;

  //249: CH2 + NO <=> H + HNCO
  cR = kf[220]*(Ci[10]*Ci[35]-kr[247]*Ci[1]*Ci[45]);
#ifdef DEBUG
  printf("249: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[10] += -cR;
  wdot[35] += -cR;
  wdot[45] += cR;

  //250: CH2 + NO <=> OH + HCN
  cR = kf[221]*(Ci[10]*Ci[35]-kr[248]*Ci[4]*Ci[40]);
#ifdef DEBUG
  printf("250: %+.15e\n", cR);
#endif
  wdot[4] += cR;
  wdot[10] += -cR;
  wdot[35] += -cR;
  wdot[40] += cR;

  //251: CH2 + NO <=> H + HCNO
  cR = kf[222]*(Ci[10]*Ci[35]-kr[249]*Ci[1]*Ci[43]);
#ifdef DEBUG
  printf("251: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[10] += -cR;
  wdot[35] += -cR;
  wdot[43] += cR;

  //252: CH2(S) + NO <=> H + HNCO
  cR = kf[345]*(Ci[11]*Ci[35]-kr[250]*Ci[1]*Ci[45]);
#ifdef DEBUG
  printf("252: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[11] += -cR;
  wdot[35] += -cR;
  wdot[45] += cR;

  //253: CH2(S) + NO <=> OH + HCN
  cR = kf[346]*(Ci[11]*Ci[35]-kr[251]*Ci[4]*Ci[40]);
#ifdef DEBUG
  printf("253: %+.15e\n", cR);
#endif
  wdot[4] += cR;
  wdot[11] += -cR;
  wdot[35] += -cR;
  wdot[40] += cR;

  //254: CH2(S) + NO <=> H + HCNO
  cR = kf[347]*(Ci[11]*Ci[35]-kr[252]*Ci[1]*Ci[43]);
#ifdef DEBUG
  printf("254: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[11] += -cR;
  wdot[35] += -cR;
  wdot[43] += cR;

  //255: CH3 + NO <=> HCN + H2O
  cR = kf[162]*(Ci[12]*Ci[35]-kr[253]*Ci[5]*Ci[40]);
#ifdef DEBUG
  printf("255: %+.15e\n", cR);
#endif
  wdot[5] += cR;
  wdot[12] += -cR;
  wdot[35] += -cR;
  wdot[40] += cR;

  //256: CH3 + NO <=> H2CN + OH
  cR = kf[163]*(Ci[12]*Ci[35]-kr[254]*Ci[4]*Ci[41]);
#ifdef DEBUG
  printf("256: %+.15e\n", cR);
#endif
  wdot[4] += cR;
  wdot[12] += -cR;
  wdot[35] += -cR;
  wdot[41] += cR;

  //257: HCNN + O <=> CO + H + N2
  cR = kf[308]*(Ci[2]*Ci[42]-kr[255]*Ci[1]*Ci[14]*Ci[47]);
#ifdef DEBUG
  printf("257: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[2] += -cR;
  wdot[14] += cR;
  wdot[42] += -cR;
  wdot[47] += cR;

  //258: HCNN + O <=> HCN + NO
  cR = kf[309]*(Ci[2]*Ci[42]-kr[256]*Ci[35]*Ci[40]);
#ifdef DEBUG
  printf("258: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[35] += cR;
  wdot[40] += cR;
  wdot[42] += -cR;

  //259: HCNN + O2 <=> O + HCO + N2
  cR = kf[310]*(Ci[3]*Ci[42]-kr[257]*Ci[2]*Ci[16]*Ci[47]);
#ifdef DEBUG
  printf("259: %+.15e\n", cR);
#endif
  wdot[2] += cR;
  wdot[3] += -cR;
  wdot[16] += cR;
  wdot[42] += -cR;
  wdot[47] += cR;

  //260: HCNN + OH <=> H + HCO + N2
  cR = kf[311]*(Ci[4]*Ci[42]-kr[258]*Ci[1]*Ci[16]*Ci[47]);
#ifdef DEBUG
  printf("260: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[4] += -cR;
  wdot[16] += cR;
  wdot[42] += -cR;
  wdot[47] += cR;

  //261: HCNN + H <=> CH2 + N2
  cR = kf[312]*(Ci[1]*Ci[42]-kr[259]*Ci[10]*Ci[47]);
#ifdef DEBUG
  printf("261: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[10] += cR;
  wdot[42] += -cR;
  wdot[47] += cR;

  //262: HNCO + O <=> NH + CO2
  cR = kf[164]*(Ci[2]*Ci[45]-kr[260]*Ci[15]*Ci[31]);
#ifdef DEBUG
  printf("262: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[15] += cR;
  wdot[31] += cR;
  wdot[45] += -cR;

  //263: HNCO + O <=> HNO + CO
  cR = kf[165]*(Ci[2]*Ci[45]-kr[261]*Ci[14]*Ci[38]);
#ifdef DEBUG
  printf("263: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[14] += cR;
  wdot[38] += cR;
  wdot[45] += -cR;

  //264: HNCO + O <=> NCO + OH
  cR = kf[166]*(Ci[2]*Ci[45]-kr[262]*Ci[4]*Ci[46]);
#ifdef DEBUG
  printf("264: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[45] += -cR;
  wdot[46] += cR;

  //265: HNCO + H <=> NH2 + CO
  cR = kf[167]*(Ci[1]*Ci[45]-kr[263]*Ci[14]*Ci[32]);
#ifdef DEBUG
  printf("265: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[14] += cR;
  wdot[32] += cR;
  wdot[45] += -cR;

  //266: HNCO + H <=> H2 + NCO
  cR = kf[168]*(Ci[1]*Ci[45]-kr[264]*Ci[0]*Ci[46]);
#ifdef DEBUG
  printf("266: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[45] += -cR;
  wdot[46] += cR;

  //267: HNCO + OH <=> NCO + H2O
  cR = kf[223]*(Ci[4]*Ci[45]-kr[265]*Ci[5]*Ci[46]);
#ifdef DEBUG
  printf("267: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[45] += -cR;
  wdot[46] += cR;

  //268: HNCO + OH <=> NH2 + CO2
  cR = kf[348]*(Ci[4]*Ci[45]-kr[266]*Ci[15]*Ci[32]);
#ifdef DEBUG
  printf("268: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[15] += cR;
  wdot[32] += cR;
  wdot[45] += -cR;

  //269: HNCO + M <=> NH + CO + M
  cR = kf[169]*(Ci[45]-kr[267]*Ci[14]*Ci[31]);
#ifdef DEBUG
  printf("269: %+.15e\n", cR);
#endif
  wdot[14] += cR;
  wdot[31] += cR;
  wdot[45] += -cR;

  //270: HCNO + H <=> H + HNCO
  cR = kf[170]*(Ci[1]*Ci[43]-kr[268]*Ci[1]*Ci[45]);
#ifdef DEBUG
  printf("270: %+.15e\n", cR);
#endif
  wdot[43] += -cR;
  wdot[45] += cR;

  //271: HCNO + H <=> OH + HCN
  cR = kf[171]*(Ci[1]*Ci[43]-kr[269]*Ci[4]*Ci[40]);
#ifdef DEBUG
  printf("271: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[4] += cR;
  wdot[40] += cR;
  wdot[43] += -cR;

  //272: HCNO + H <=> NH2 + CO
  cR = kf[172]*(Ci[1]*Ci[43]-kr[270]*Ci[14]*Ci[32]);
#ifdef DEBUG
  printf("272: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[14] += cR;
  wdot[32] += cR;
  wdot[43] += -cR;

  //273: HOCN + H <=> H + HNCO
  cR = kf[173]*(Ci[1]*Ci[44]-kr[271]*Ci[1]*Ci[45]);
#ifdef DEBUG
  printf("273: %+.15e\n", cR);
#endif
  wdot[44] += -cR;
  wdot[45] += cR;

  //274: HCCO + NO <=> HCNO + CO
  cR = kf[313]*(Ci[27]*Ci[35]-kr[272]*Ci[14]*Ci[43]);
#ifdef DEBUG
  printf("274: %+.15e\n", cR);
#endif
  wdot[14] += cR;
  wdot[27] += -cR;
  wdot[35] += -cR;
  wdot[43] += cR;

  //275: CH3 + N <=> H2CN + H
  cR = kf[174]*(Ci[12]*Ci[30]-kr[273]*Ci[1]*Ci[41]);
#ifdef DEBUG
  printf("275: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[12] += -cR;
  wdot[30] += -cR;
  wdot[41] += cR;

  //276: CH3 + N <=> HCN + H2
  cR = kf[175]*(Ci[12]*Ci[30]-kr[274]*Ci[0]*Ci[40]);
#ifdef DEBUG
  printf("276: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[12] += -cR;
  wdot[30] += -cR;
  wdot[40] += cR;

  //277: NH3 + H <=> NH2 + H2
  cR = kf[176]*(Ci[1]*Ci[33]-kr[275]*Ci[0]*Ci[32]);
#ifdef DEBUG
  printf("277: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[32] += cR;
  wdot[33] += -cR;

  //278: NH3 + OH <=> NH2 + H2O
  cR = kf[177]*(Ci[4]*Ci[33]-kr[276]*Ci[5]*Ci[32]);
#ifdef DEBUG
  printf("278: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[32] += cR;
  wdot[33] += -cR;

  //279: NH3 + O <=> NH2 + OH
  cR = kf[178]*(Ci[2]*Ci[33]-kr[277]*Ci[4]*Ci[32]);
#ifdef DEBUG
  printf("279: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[32] += cR;
  wdot[33] += -cR;

  //280: NH + CO2 <=> HNO + CO
  cR = kf[179]*(Ci[15]*Ci[31]-kr[278]*Ci[14]*Ci[38]);
#ifdef DEBUG
  printf("280: %+.15e\n", cR);
#endif
  wdot[14] += cR;
  wdot[15] += -cR;
  wdot[31] += -cR;
  wdot[38] += cR;

  //281: CN + NO2 <=> NCO + NO
  cR = kf[180]*(Ci[36]*Ci[39]-kr[279]*Ci[35]*Ci[46]);
#ifdef DEBUG
  printf("281: %+.15e\n", cR);
#endif
  wdot[35] += cR;
  wdot[36] += -cR;
  wdot[39] += -cR;
  wdot[46] += cR;

  //282: NCO + NO2 <=> N2O + CO2
  cR = kf[181]*(Ci[36]*Ci[46]-kr[280]*Ci[15]*Ci[37]);
#ifdef DEBUG
  printf("282: %+.15e\n", cR);
#endif
  wdot[15] += cR;
  wdot[36] += -cR;
  wdot[37] += cR;
  wdot[46] += -cR;

  //283: N + CO2 <=> NO + CO
  cR = kf[182]*(Ci[15]*Ci[30]-kr[281]*Ci[14]*Ci[35]);
#ifdef DEBUG
  printf("283: %+.15e\n", cR);
#endif
  wdot[14] += cR;
  wdot[15] += -cR;
  wdot[30] += -cR;
  wdot[35] += cR;

  //284: O + CH3 => H + H2 + CO
  cR = kf[314]*(Ci[2]*Ci[12]);
#ifdef DEBUG
  printf("284: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += cR;
  wdot[2] += -cR;
  wdot[12] += -cR;
  wdot[14] += cR;

  //285: O + C2H4 <=> H + CH2CHO
  cR = kf[349]*(Ci[2]*Ci[24]-kr[282]*Ci[1]*Ci[50]);
#ifdef DEBUG
  printf("285: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[2] += -cR;
  wdot[24] += -cR;
  wdot[50] += cR;

  //286: O + C2H5 <=> H + CH3CHO
  cR = kf[315]*(Ci[2]*Ci[25]-kr[283]*Ci[1]*Ci[51]);
#ifdef DEBUG
  printf("286: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[2] += -cR;
  wdot[25] += -cR;
  wdot[51] += cR;

  //287: OH + HO2 <=> O2 + H2O
  cR = kf[183]*(Ci[4]*Ci[6]-kr[284]*Ci[3]*Ci[5]);
#ifdef DEBUG
  printf("287: %+.15e\n", cR);
#endif
  wdot[3] += cR;
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[6] += -cR;

  //288: OH + CH3 => H2 + CH2O
  cR = kf[184]*(Ci[4]*Ci[12]);
#ifdef DEBUG
  printf("288: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[4] += -cR;
  wdot[12] += -cR;
  wdot[17] += cR;

  //289: CH + H2 (+M) <=> CH3 (+M)
  cR = kf[186]*(Ci[0]*Ci[9]-kr[285]*Ci[12]);
#ifdef DEBUG
  printf("289: %+.15e\n", cR);
#endif
  wdot[0] += -cR;
  wdot[9] += -cR;
  wdot[12] += cR;

  //290: CH2 + O2 => 2 H + CO2
  cR = kf[350]*(Ci[3]*Ci[10]);
#ifdef DEBUG
  printf("290: %+.15e\n", cR);
#endif
  wdot[1] += 2*cR;
  wdot[3] += -cR;
  wdot[10] += -cR;
  wdot[15] += cR;

  //291: CH2 + O2 <=> O + CH2O
  cR = kf[353]*(Ci[3]*Ci[10]-kr[286]*Ci[2]*Ci[17]);
#ifdef DEBUG
  printf("291: %+.15e\n", cR);
#endif
  wdot[2] += cR;
  wdot[3] += -cR;
  wdot[10] += -cR;
  wdot[17] += cR;

  //292: CH2 + CH2 => 2 H + C2H2
  cR = kf[187]*(Ci[10]*Ci[10]);
#ifdef DEBUG
  printf("292: %+.15e\n", cR);
#endif
  wdot[1] += 2*cR;
  wdot[10] += -2*cR;
  wdot[22] += cR;

  //293: CH2(S) + H2O => H2 + CH2O
  cR = kf[188]*(Ci[5]*Ci[11]);
#ifdef DEBUG
  printf("293: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[5] += -cR;
  wdot[11] += -cR;
  wdot[17] += cR;

  //294: C2H3 + O2 <=> O + CH2CHO
  cR = kf[189]*(Ci[3]*Ci[23]-kr[287]*Ci[2]*Ci[50]);
#ifdef DEBUG
  printf("294: %+.15e\n", cR);
#endif
  wdot[2] += cR;
  wdot[3] += -cR;
  wdot[23] += -cR;
  wdot[50] += cR;

  //295: C2H3 + O2 <=> HO2 + C2H2
  cR = kf[190]*(Ci[3]*Ci[23]-kr[288]*Ci[6]*Ci[22]);
#ifdef DEBUG
  printf("295: %+.15e\n", cR);
#endif
  wdot[3] += -cR;
  wdot[6] += cR;
  wdot[22] += cR;
  wdot[23] += -cR;

  //296: O + CH3CHO <=> OH + CH2CHO
  cR = kf[226]*(Ci[2]*Ci[51]-kr[289]*Ci[4]*Ci[50]);
#ifdef DEBUG
  printf("296: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[50] += cR;
  wdot[51] += -cR;

  //297: O + CH3CHO => OH + CH3 + CO
  cR = kf[351]*(Ci[2]*Ci[51]);
#ifdef DEBUG
  printf("297: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[12] += cR;
  wdot[14] += cR;
  wdot[51] += -cR;

  //298: O2 + CH3CHO => HO2 + CH3 + CO
  cR = kf[191]*(Ci[3]*Ci[51]);
#ifdef DEBUG
  printf("298: %+.15e\n", cR);
#endif
  wdot[3] += -cR;
  wdot[6] += cR;
  wdot[12] += cR;
  wdot[14] += cR;
  wdot[51] += -cR;

  //299: H + CH3CHO <=> CH2CHO + H2
  cR = kf[227]*(Ci[1]*Ci[51]-kr[290]*Ci[0]*Ci[50]);
#ifdef DEBUG
  printf("299: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[50] += cR;
  wdot[51] += -cR;

  //300: H + CH3CHO => CH3 + H2 + CO
  cR = kf[352]*(Ci[1]*Ci[51]);
#ifdef DEBUG
  printf("300: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[12] += cR;
  wdot[14] += cR;
  wdot[51] += -cR;

  //301: OH + CH3CHO => CH3 + H2O + CO
  cR = kf[192]*(Ci[4]*Ci[51]);
#ifdef DEBUG
  printf("301: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[12] += cR;
  wdot[14] += cR;
  wdot[51] += -cR;

  //302: HO2 + CH3CHO => CH3 + H2O2 + CO
  cR = kf[193]*(Ci[6]*Ci[51]);
#ifdef DEBUG
  printf("302: %+.15e\n", cR);
#endif
  wdot[6] += -cR;
  wdot[7] += cR;
  wdot[12] += cR;
  wdot[14] += cR;
  wdot[51] += -cR;

  //303: CH3 + CH3CHO => CH3 + CH4 + CO
  cR = kf[194]*(Ci[12]*Ci[51]);
#ifdef DEBUG
  printf("303: %+.15e\n", cR);
#endif
  wdot[13] += cR;
  wdot[14] += cR;
  wdot[51] += -cR;

  //304: H + CH2CO (+M) <=> CH2CHO (+M)
  cR = kf[196]*(Ci[1]*Ci[28]-kr[291]*Ci[50]);
#ifdef DEBUG
  printf("304: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[28] += -cR;
  wdot[50] += cR;

  //305: O + CH2CHO => H + CH2 + CO2
  cR = kf[316]*(Ci[2]*Ci[50]);
#ifdef DEBUG
  printf("305: %+.15e\n", cR);
#endif
  wdot[1] += cR;
  wdot[2] += -cR;
  wdot[10] += cR;
  wdot[15] += cR;
  wdot[50] += -cR;

  //306: O2 + CH2CHO => OH + CO + CH2O
  cR = kf[317]*(Ci[3]*Ci[50]);
#ifdef DEBUG
  printf("306: %+.15e\n", cR);
#endif
  wdot[3] += -cR;
  wdot[4] += cR;
  wdot[14] += cR;
  wdot[17] += cR;
  wdot[50] += -cR;

  //307: O2 + CH2CHO => OH + 2 HCO
  cR = kf[318]*(Ci[3]*Ci[50]);
#ifdef DEBUG
  printf("307: %+.15e\n", cR);
#endif
  wdot[3] += -cR;
  wdot[4] += cR;
  wdot[16] += 2*cR;
  wdot[50] += -cR;

  //308: H + CH2CHO <=> CH3 + HCO
  cR = kf[319]*(Ci[1]*Ci[50]-kr[292]*Ci[12]*Ci[16]);
#ifdef DEBUG
  printf("308: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[12] += cR;
  wdot[16] += cR;
  wdot[50] += -cR;

  //309: H + CH2CHO <=> CH2CO + H2
  cR = kf[320]*(Ci[1]*Ci[50]-kr[293]*Ci[0]*Ci[28]);
#ifdef DEBUG
  printf("309: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[28] += cR;
  wdot[50] += -cR;

  //310: OH + CH2CHO <=> H2O + CH2CO
  cR = kf[321]*(Ci[4]*Ci[50]-kr[294]*Ci[5]*Ci[28]);
#ifdef DEBUG
  printf("310: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[28] += cR;
  wdot[50] += -cR;

  //311: OH + CH2CHO <=> HCO + CH2OH
  cR = kf[322]*(Ci[4]*Ci[50]-kr[295]*Ci[16]*Ci[18]);
#ifdef DEBUG
  printf("311: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[16] += cR;
  wdot[18] += cR;
  wdot[50] += -cR;

  //312: CH3 + C2H5 (+M) <=> C3H8 (+M)
  cR = kf[197]*(Ci[12]*Ci[25]-kr[296]*Ci[49]);
#ifdef DEBUG
  printf("312: %+.15e\n", cR);
#endif
  wdot[12] += -cR;
  wdot[25] += -cR;
  wdot[49] += cR;

  //313: O + C3H8 <=> OH + C3H7
  cR = kf[198]*(Ci[2]*Ci[49]-kr[297]*Ci[4]*Ci[48]);
#ifdef DEBUG
  printf("313: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[4] += cR;
  wdot[48] += cR;
  wdot[49] += -cR;

  //314: H + C3H8 <=> C3H7 + H2
  cR = kf[199]*(Ci[1]*Ci[49]-kr[298]*Ci[0]*Ci[48]);
#ifdef DEBUG
  printf("314: %+.15e\n", cR);
#endif
  wdot[0] += cR;
  wdot[1] += -cR;
  wdot[48] += cR;
  wdot[49] += -cR;

  //315: OH + C3H8 <=> C3H7 + H2O
  cR = kf[200]*(Ci[4]*Ci[49]-kr[299]*Ci[5]*Ci[48]);
#ifdef DEBUG
  printf("315: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[5] += cR;
  wdot[48] += cR;
  wdot[49] += -cR;

  //316: C3H7 + H2O2 <=> HO2 + C3H8
  cR = kf[201]*(Ci[7]*Ci[48]-kr[300]*Ci[6]*Ci[49]);
#ifdef DEBUG
  printf("316: %+.15e\n", cR);
#endif
  wdot[6] += cR;
  wdot[7] += -cR;
  wdot[48] += -cR;
  wdot[49] += cR;

  //317: CH3 + C3H8 <=> C3H7 + CH4
  cR = kf[202]*(Ci[12]*Ci[49]-kr[301]*Ci[13]*Ci[48]);
#ifdef DEBUG
  printf("317: %+.15e\n", cR);
#endif
  wdot[12] += -cR;
  wdot[13] += cR;
  wdot[48] += cR;
  wdot[49] += -cR;

  //318: CH3 + C2H4 (+M) <=> C3H7 (+M)
  cR = kf[204]*(Ci[12]*Ci[24]-kr[302]*Ci[48]);
#ifdef DEBUG
  printf("318: %+.15e\n", cR);
#endif
  wdot[12] += -cR;
  wdot[24] += -cR;
  wdot[48] += cR;

  //319: O + C3H7 <=> C2H5 + CH2O
  cR = kf[324]*(Ci[2]*Ci[48]-kr[303]*Ci[17]*Ci[25]);
#ifdef DEBUG
  printf("319: %+.15e\n", cR);
#endif
  wdot[2] += -cR;
  wdot[17] += cR;
  wdot[25] += cR;
  wdot[48] += -cR;

  //320: H + C3H7 (+M) <=> C3H8 (+M)
  cR = kf[205]*(Ci[1]*Ci[48]-kr[304]*Ci[49]);
#ifdef DEBUG
  printf("320: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[48] += -cR;
  wdot[49] += cR;

  //321: H + C3H7 <=> CH3 + C2H5
  cR = kf[206]*(Ci[1]*Ci[48]-kr[305]*Ci[12]*Ci[25]);
#ifdef DEBUG
  printf("321: %+.15e\n", cR);
#endif
  wdot[1] += -cR;
  wdot[12] += cR;
  wdot[25] += cR;
  wdot[48] += -cR;

  //322: OH + C3H7 <=> C2H5 + CH2OH
  cR = kf[326]*(Ci[4]*Ci[48]-kr[306]*Ci[18]*Ci[25]);
#ifdef DEBUG
  printf("322: %+.15e\n", cR);
#endif
  wdot[4] += -cR;
  wdot[18] += cR;
  wdot[25] += cR;
  wdot[48] += -cR;

  //323: HO2 + C3H7 <=> O2 + C3H8
  cR = kf[207]*(Ci[6]*Ci[48]-kr[307]*Ci[3]*Ci[49]);
#ifdef DEBUG
  printf("323: %+.15e\n", cR);
#endif
  wdot[3] += cR;
  wdot[6] += -cR;
  wdot[48] += -cR;
  wdot[49] += cR;

  //324: HO2 + C3H7 => OH + C2H5 + CH2O
  cR = kf[327]*(Ci[6]*Ci[48]);
#ifdef DEBUG
  printf("324: %+.15e\n", cR);
#endif
  wdot[4] += cR;
  wdot[6] += -cR;
  wdot[17] += cR;
  wdot[25] += cR;
  wdot[48] += -cR;

  //325: CH3 + C3H7 <=> 2 C2H5
  cR = kf[208]*(Ci[12]*Ci[48]-kr[308]*Ci[25]*Ci[25]);
#ifdef DEBUG
  printf("325: %+.15e\n", cR);
#endif
  wdot[12] += -cR;
  wdot[25] += 2*cR;
  wdot[48] += -cR;

}